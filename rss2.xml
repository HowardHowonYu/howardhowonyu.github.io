<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Howard&#39;s nest</title>
    <link>https://howardhowonyu.github.io/</link>
    
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description></description>
    <pubDate>Sat, 22 Feb 2020 12:21:29 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>CSS-selector</title>
      <link>https://howardhowonyu.github.io/2020/02/22/TIL-crawling-2020-02-22-crawling-css/</link>
      <guid>https://howardhowonyu.github.io/2020/02/22/TIL-crawling-2020-02-22-crawling-css/</guid>
      <pubDate>Sat, 22 Feb 2020 12:16:02 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;CSS-Selector&quot;&gt;&lt;a href=&quot;#CSS-Selector&quot; class=&quot;headerlink&quot; title=&quot;CSS Selector&quot;&gt;&lt;/a&gt;CSS Selector&lt;/h1&gt;&lt;p&gt;HTML 엘리먼트에 CSS 스타일을 적용시킬때 엘리먼트
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="CSS-Selector"><a href="#CSS-Selector" class="headerlink" title="CSS Selector"></a>CSS Selector</h1><p>HTML 엘리먼트에 CSS 스타일을 적용시킬때 엘리먼트를 선택하기 위한 입니다.</p><h4 id="1-태그-이름으로-선택"><a href="#1-태그-이름으로-선택" class="headerlink" title="1. 태그 이름으로 선택"></a>1. 태그 이름으로 선택</h4><p>“data 1 엘리먼트를 선택”</p><ul><li>css-selector : <code>div</code></li></ul><h4 id="2-아이디-값으로-선택"><a href="#2-아이디-값으로-선택" class="headerlink" title="2. 아이디 값으로 선택"></a>2. 아이디 값으로 선택</h4><p>“data 2를 아이디 값으로 선택”</p><ul><li>css-selector : <code>#text</code></li></ul><h4 id="3-클래스-값으로-선택"><a href="#3-클래스-값으로-선택" class="headerlink" title="3.클래스 값으로 선택"></a>3.클래스 값으로 선택</h4><p>“data 3를 클래스 값으로 선택”</p><ul><li>css-selector : <code>.no1</code></li><li><code>.dss-txt</code> : data2, data 3가 선택 </li></ul><h4 id="4-속성값으로-선택"><a href="#4-속성값으로-선택" class="headerlink" title="4. 속성값으로 선택"></a>4. 속성값으로 선택</h4><p>“data 4를 속성값으로 선택”</p><ul><li>css-selector : <code>[val=&quot;d4&quot;]</code>, <code>[id=&quot;da4&quot;]</code></li></ul><h4 id="5-혼합해서-사용"><a href="#5-혼합해서-사용" class="headerlink" title="5. 혼합해서 사용"></a>5. 혼합해서 사용</h4><p>“span 태그, class 값이 no5인 엘리먼트 선택”</p><ul><li>css-selector : <code>span.no5</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"wrap"</span>&gt;</span>data 1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"dss-txt no1"</span>&gt;</span>data 2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"dss-txt no2"</span> <span class="attr">val</span>=<span class="string">"d3"</span>&gt;</span>data 3<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"da4"</span> <span class="attr">val</span>=<span class="string">"d4"</span>&gt;</span>data 4<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"no5"</span> &gt;</span>data 5<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="6-not-selector"><a href="#6-not-selector" class="headerlink" title="6. not selector"></a>6. not selector</h4><p>선택된 엘리먼트에서 특정 조건의 엘리먼트를 제거해서 선택<br>data 2 엘리먼트만 제외한 ds 클래스를 선택</p><ul><li>css-selector : <code>.ds:not(.dss2)</code></li></ul><h4 id="7-nth-child"><a href="#7-nth-child" class="headerlink" title="7.nth-child"></a>7.nth-child</h4><p>n번째의 엘리먼트를 선택</p><p>data 3 선택하는 방법</p><ul><li>css-selector : <code>.ds:nth-child(3)</code><br>뒤의 조건(.ds라는 클래스를 가진 상위 클래스의 자식중에 3번째)이 먼저, 다음 ds라는 클래스를 가진거를 선택</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>data 0<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"ds dss1"</span>&gt;</span>data 1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"ds dss2"</span>&gt;</span>data 2<span class="tag">&lt;/<span class="name">p</span>&gt;</span> # 얘도 3번째 ds</span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"ds dss3"</span>&gt;</span>data 3<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"ds dss4"</span>&gt;</span>data 4<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrap"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"ds dss1"</span>&gt;</span>data 1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"ds dss2"</span>&gt;</span>data 2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"ds dss3"</span>&gt;</span>data 3<span class="tag">&lt;/<span class="name">p</span>&gt;</span> # 얘도 3번째 ds</span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"ds dss4"</span>&gt;</span>data 4<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ds"</span>&gt;</span> data5<span class="tag">&lt;/<span class="name">div</span>&gt;</span> # 얘도 3번째 ds</span><br></pre></td></tr></table></figure><h4 id="8-계층구조로-엘리먼트-선택"><a href="#8-계층구조로-엘리먼트-선택" class="headerlink" title="8. 계층구조로 엘리먼트 선택"></a>8. 계층구조로 엘리먼트 선택</h4><p>바로 아래 단계의 엘리먼트 선택</p><ul><li><code>.wrap-1 &gt; h5</code> : inner 1선택<br>모든 하위 엘리먼트를 선택</li><li><code>.wrap-1 h5</code> : inner 1,inner 2선택<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrap-1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h5</span>&gt;</span>inner 1 <span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrap-2"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h5</span>&gt;</span>inner 2 <span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul>]]></content:encoded>
      
      <comments>https://howardhowonyu.github.io/2020/02/22/TIL-crawling-2020-02-22-crawling-css/#disqus_thread</comments>
    </item>
    
    <item>
      <title>HTML</title>
      <link>https://howardhowonyu.github.io/2020/02/22/TIL-crawling-2020-02-22-html-css-selector/</link>
      <guid>https://howardhowonyu.github.io/2020/02/22/TIL-crawling-2020-02-22-html-css-selector/</guid>
      <pubDate>Sat, 22 Feb 2020 10:38:19 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;HTML&quot;&gt;&lt;a href=&quot;#HTML&quot; class=&quot;headerlink&quot; title=&quot;HTML&quot;&gt;&lt;/a&gt;HTML&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;Hyper Text Markup Language&lt;/li&gt;
&lt;li&gt;웹 문서를 작성하는 마크업 언어입니다
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h1><ul><li>Hyper Text Markup Language</li><li>웹 문서를 작성하는 마크업 언어입니다.</li><li>웹페이지를 구성하는 언어에는 3종류가 있습니다.<ul><li>HTML : 화면의 레이아웃이나 텍스트</li><li>CSS : 화면의 색상 크기 등의 스타일</li><li>Javascript : 화면의 클릭, 드래그 등등의 이벤트</li></ul></li></ul><h2 id="1-1-HTML의-구성요소"><a href="#1-1-HTML의-구성요소" class="headerlink" title="1.1 HTML의 구성요소"></a>1.1 HTML의 구성요소</h2><p><strong><code>Document</code></strong></p><ul><li>페이지 전체</li></ul><p><strong><code>element</code></strong></p><ul><li>계층적 구조로 이루어져 있으며 모여서 Document가 됩니다.</li><li>시작 태그와 끝 태그로 구성되어 있습니다. <code>&lt;div&gt; &lt;/div&gt;</code></li></ul><p><strong><code>Tag</code></strong></p><ul><li>시작태그와 끝 태그로 엘리먼트를 구성합니다.</li><li>시작 태그에는 여러가지 속성값들이 들어 있습니다.</li><li>태그와 태그 사이에는 문자열 데이터를 가질수 있습니다.</li><li>태그의 이름에 따라서 태그의 목적이 달라집니다.</li></ul><p><strong><code>Attribute</code></strong></p><ul><li>시작 태그 안에 포함되는 속성값입니다.</li><li><code>id</code>, <code>class</code> : 엘리먼트를 선택하기 위한 목적으로 만들어진 속성값입니다.</li><li>이 외에도 다양한 속성값이 존재 합니다.</li></ul><h3 id="1-2-속성값"><a href="#1-2-속성값" class="headerlink" title="1.2 속성값"></a>1.2 속성값</h3><p><strong><code>id</code></strong> : 웹페이지에서 유일한 값입니다.<br><strong><code>class</code></strong> :</p><ul><li>웹 페이지 내에서 여러개의 class가 존재합니다.</li><li>하나의 엘리먼트에 여러개의 class를 부여할수 있습니다.</li></ul><p><strong><code>type</code></strong> : 엘리먼트 형태를 결정합니다. (button, checkbox 등)<br><strong><code>style</code></strong> : CSS 스타일 값을 적용할수 있습니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrapper"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn-1"</span> <span class="attr">class</span>=<span class="string">"bt no1"</span><span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">style</span>=<span class="string">"color:red;"</span> &gt;</span>HTML 1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn-2"</span> <span class="attr">class</span>=<span class="string">"bt no2"</span><span class="attr">type</span>=<span class="string">"button"</span>&gt;</span>HTML 2<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="1-3-태그의-종류"><a href="#1-3-태그의-종류" class="headerlink" title="1.3 태그의 종류"></a>1.3 태그의 종류</h3><p><strong><code>Head</code></strong> : 제목을 나타낼때 사용합니다. h1부터 숫자가 커질수록 작아집니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Python<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h6</span>&gt;</span>HTML<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong><code>p</code></strong> : 한줄의 문자열을 출력하기 위한 태그입니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>파이썬은 재미있습니다.<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>내일은 휴강입니다.<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong><code>div</code></strong> : 레이아웃을 나타내는 태그이고, 가장 많이 사용됩니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>html 1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>html 2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>html 3<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong><code>table</code></strong> : row와 column이 있는 테이블 모양을 나타낼때 사용되는 태그입니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">caption</span>&gt;</span>테이블 제목<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>코드<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>회사명<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>0001<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>애플<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">td</span>&gt;</span>0002<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>네이버<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong><code>ul</code></strong>,<strong><code>li</code></strong> : 리스트를 나타내는 태그입니다. 하나의 ul에 다수의 li태그를 가집니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>data 1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>data 2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>data 3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong><code>a</code></strong> : 링크를 출력하는 태그입니다. <code>href</code> 속성값에 이동할 URL을 입력합니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"howardhowonyu.github.io"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>Howard's nest<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong><code>img</code></strong> : 이미지를 불러오는 태그 입니다. <code>src</code> 속성값에 이미지의 URL을 입력합니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">style</span> =<span class="string">"width:200px;"</span><span class="attr">src</span>=<span class="string">"이곳에 이미지의 URL을 입력합니다."</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong><code>iframe</code></strong> : 외부 URL 링크의 페이지를 보여주기 위한 태그입니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">"https://howardhowonyu.github.io/"</span> <span class="attr">width</span>=<span class="string">"100%;"</span> <span class="attr">height</span>=<span class="string">"400px;"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong><code>input</code></strong> : 여러 형태의 값을 입력받는 요소들을 만드는 태그입니다.</p><ul><li>text : 문자를 입력받습니다.</li><li>password : 비밀번호(****)형태로 입력 받습니다.</li><li>radio : n지 선다의 답을 받습니다.</li><li>checkbox : 체크박스를 만듭니다.<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">placeholder</span>=<span class="string">"비밀번호"</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"data"</span>&gt;</span>radio 1<span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"data"</span>&gt;</span>radio 2<span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span>checkbox 1<span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p><strong><code>select,option</code></strong>:  옵션을 선택할수 있는 드랍다운 형태를 만드는  태그입니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span>&gt;</span>data 1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span>&gt;</span>data 2<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://howardhowonyu.github.io/2020/02/22/TIL-crawling-2020-02-22-html-css-selector/#disqus_thread</comments>
    </item>
    
    <item>
      <title>예외처리</title>
      <link>https://howardhowonyu.github.io/2020/02/21/python-2020-02-21-try-except-finally-raise/</link>
      <guid>https://howardhowonyu.github.io/2020/02/21/python-2020-02-21-try-except-finally-raise/</guid>
      <pubDate>Fri, 21 Feb 2020 10:30:49 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;TRY-EXCEPT&quot;&gt;&lt;a href=&quot;#TRY-EXCEPT&quot; class=&quot;headerlink&quot; title=&quot;TRY, EXCEPT&quot;&gt;&lt;/a&gt;TRY, EXCEPT&lt;/h1&gt;&lt;p&gt;에러가 발생해도 코드의 실행을 계속 하고 싶을 때 사용합니다.&lt;/
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="TRY-EXCEPT"><a href="#TRY-EXCEPT" class="headerlink" title="TRY, EXCEPT"></a>TRY, EXCEPT</h1><p>에러가 발생해도 코드의 실행을 계속 하고 싶을 때 사용합니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">ls = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># try구문을 실행</span></span><br><span class="line"><span class="keyword">try</span>: </span><br><span class="line">    print(ls[<span class="number">3</span>])</span><br><span class="line"><span class="comment"># 오류가 발생해도 코드의 실행을 마치고 e라는 변수에 오류 메세지를 담습니다.</span></span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    print(<span class="string">"error"</span>)</span><br><span class="line">    print(e)</span><br><span class="line">print(<span class="string">"Done!"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># error</span></span><br><span class="line"><span class="comment"># name 'ls' is not defined</span></span><br><span class="line"><span class="comment"># Done!</span></span><br></pre></td></tr></table></figure><h1 id="FINALLY"><a href="#FINALLY" class="headerlink" title="FINALLY"></a>FINALLY</h1><p>try, except 구문 실행된후 finally 구문이 실행됩니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="number">1</span>/<span class="number">0</span></span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    print(<span class="string">"error"</span>)</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    print(<span class="string">"Done!"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># error</span></span><br><span class="line"><span class="comment"># Done!</span></span><br></pre></td></tr></table></figure><blockquote><p>코딩 실행 중간에 에러가 발생하면 변수안에 계속 데이터를 가지고 있고, 이는 낭비입니다.<br>때문에 try던 except건 간에 어쨋든 “실행 되면 finally 변수안에 데이터 지워줘” 라고 할때 사용합니다.</p></blockquote><h1 id="RAISE"><a href="#RAISE" class="headerlink" title="RAISE"></a>RAISE</h1><p>강제로 에러를 발생시키는 명령입니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="number">1</span>/<span class="number">0</span></span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    print(<span class="string">"error"</span>)</span><br><span class="line">    <span class="keyword">raise</span>(e)</span><br><span class="line">    </span><br><span class="line">print(<span class="string">"Done!"</span>)</span><br></pre></td></tr></table></figure><blockquote><p>except때문에 코드 실행이 완료 되어야 하지만 raise()떄문에 강제로 에러가 발생됩니다.</p></blockquote><h1 id="에러-메세지-생성"><a href="#에러-메세지-생성" class="headerlink" title="에러 메세지 생성"></a>에러 메세지 생성</h1><p>“Number grater than 10”<br>10이상의 숫자가 입력되어야 한다는 에러 메세지를 만들어보면,</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Exception 이라는 클래스를 상속 </span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Lownumber</span><span class="params">(Exception)</span>:</span> </span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span> <span class="comment">#에러 메세지 오버라이팅</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Number grater than 10"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">input_number</span><span class="params">(num)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> num &lt;= <span class="number">10</span>:</span><br><span class="line">        <span class="keyword">raise</span> Lownumber() <span class="comment">#Lownumber 클래스를 사용</span></span><br><span class="line">    print(num)</span><br><span class="line"></span><br><span class="line">input_number(<span class="number">12</span>)</span><br><span class="line"><span class="comment"># 12</span></span><br><span class="line"></span><br><span class="line">input_number(<span class="number">8</span>)</span><br><span class="line"><span class="comment"># 에러메세지 출력</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">#Lownumber                                 Traceback (most recent call last)</span></span><br><span class="line"><span class="comment">#&lt;ipython-input-19-8684a0e33c0b&gt; in &lt;module&gt;</span></span><br><span class="line"><span class="comment">#----&gt; 1 input_number(8)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&lt;ipython-input-17-bf4895dc7d57&gt; in input_number(num)</span></span><br><span class="line"><span class="comment">#      1 def input_number(num):</span></span><br><span class="line"><span class="comment">#      2     if num &lt;= 10:</span></span><br><span class="line"><span class="comment">#----&gt; 3         raise Lownumber() #Lownumber 클래스를 사용</span></span><br><span class="line"><span class="comment">#      4     print("10")</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Lownumber: Number grater than 10</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://howardhowonyu.github.io/2020/02/21/python-2020-02-21-try-except-finally-raise/#disqus_thread</comments>
    </item>
    
    <item>
      <title>모듈과 패키지</title>
      <link>https://howardhowonyu.github.io/2020/02/21/python-2020-02-21-python-module-package/</link>
      <guid>https://howardhowonyu.github.io/2020/02/21/python-2020-02-21-python-module-package/</guid>
      <pubDate>Fri, 21 Feb 2020 10:19:18 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;Module-amp-Package&quot;&gt;&lt;a href=&quot;#Module-amp-Package&quot; class=&quot;headerlink&quot; title=&quot;Module &amp;amp; Package&quot;&gt;&lt;/a&gt;Module &amp;amp; Package&lt;/h1&gt;&lt;p&gt;모듈
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="Module-amp-Package"><a href="#Module-amp-Package" class="headerlink" title="Module &amp; Package"></a>Module &amp; Package</h1><p>모듈 : 변수, 함수, 클래스를 모아놓은 (.py)라는 이름의 확장자를 가진 파일입니다.<br>패키지 : 모듈의 기능을 디렉토리별로 정리해 놓은 개념입니다.</p><h2 id="Module-모듈"><a href="#Module-모듈" class="headerlink" title="Module(모듈)"></a>Module(모듈)</h2><p>모듈 생성</p><blockquote><p>매직 매서드를 사용한 모듈 생성</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># dss.py라는 이름의 모듈 생성</span></span><br><span class="line">%%writefile dss.py</span><br><span class="line"></span><br><span class="line"><span class="comment"># 모듈안에 함수 및 클래스를 생성</span></span><br><span class="line">num = <span class="number">1234</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">disp1</span><span class="params">(msg)</span>:</span></span><br><span class="line">    print(<span class="string">"disp1"</span>,msg)</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">disp2</span><span class="params">(msg)</span>:</span></span><br><span class="line">    print(<span class="string">"disp2"</span>,msg)</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Calc</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">plus</span><span class="params">(self,*args)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> sum(args)</span><br></pre></td></tr></table></figure><p>모듈 호출 </p><blockquote><p><code>import &quot;모듈 이름&quot;</code>으로 호출</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> dss </span><br><span class="line"></span><br><span class="line"><span class="comment"># 모듈 속 변수</span></span><br><span class="line">dss.num</span><br><span class="line"></span><br><span class="line"><span class="comment"># 모듈 속 함수</span></span><br><span class="line">dss.disp1(<span class="string">"python"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 클래스로 객체 생성</span></span><br><span class="line">calc = dss.Calc()</span><br></pre></td></tr></table></figure><h2 id="Package-패키지"><a href="#Package-패키지" class="headerlink" title="Package(패키지)"></a>Package(패키지)</h2><p>패키지의 생성</p><ul><li>패키지 생성시 디렉토리에 <strong>init</strong>.py 파일을 추가해야 합니다.</li><li>단, python 3.3버전 이상에서는 필요 없습니다.</li><li>패키지의 위치 : 특정 디렉토리(pip,conda등으로 설치하는 등)에 있는 패키지는 어디에서나 import 가능합니다.</li></ul><p>주피터 노트북에서 패키지 설치</p><ul><li><code>school $ python setup.py</code> </li><li>커널 리스타트 해야 패키지가 적용됩니다.<blockquote><p>develop : 개발자모드, 코드를 수정하면 설치된 패키지도 같이 수정됩니다.<br>build : 일반모드, 코드로 수정하면 다시 설치해야 수정된 코드가 적용됩니다.</p></blockquote></li></ul>]]></content:encoded>
      
      <comments>https://howardhowonyu.github.io/2020/02/21/python-2020-02-21-python-module-package/#disqus_thread</comments>
    </item>
    
    <item>
      <title>HTML 파싱을 이용한 크롤링</title>
      <link>https://howardhowonyu.github.io/2020/02/21/TIL-crawling-2020-02-21-crawling/</link>
      <guid>https://howardhowonyu.github.io/2020/02/21/TIL-crawling-2020-02-21-crawling/</guid>
      <pubDate>Fri, 21 Feb 2020 09:52:59 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;HTML-데이터-파싱을-이용한-크롤링&quot;&gt;&lt;a href=&quot;#HTML-데이터-파싱을-이용한-크롤링&quot; class=&quot;headerlink&quot; title=&quot;HTML 데이터 파싱을 이용한 크롤링&quot;&gt;&lt;/a&gt;HTML 데이터 파싱을 이용한 크롤링&lt;/h2&gt;&lt;
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="HTML-데이터-파싱을-이용한-크롤링"><a href="#HTML-데이터-파싱을-이용한-크롤링" class="headerlink" title="HTML 데이터 파싱을 이용한 크롤링"></a>HTML 데이터 파싱을 이용한 크롤링</h2><ol><li>웹페이지 분석 : URL 찾기</li><li>요청 -&gt; 응답 : HTML(str) 가져오기</li><li>HTML(str) -&gt; BeautifulSoup 객체에서 css-selector를 통해 내용을 가져옴 -&gt; 데이터프레임으로 변환</li></ol><h2 id="크롤링-과정"><a href="#크롤링-과정" class="headerlink" title="크롤링 과정"></a>크롤링 과정</h2><ul><li>BeautifulSoup라는 클래스의 매서드 활용 response안에 있는 애들을 BeautifulSoup으로 HTML로 파싱</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># requests.get 매서드로 요철</span></span><br><span class="line">response = requests.get(url)</span><br><span class="line"></span><br><span class="line"><span class="comment"># response.content로 내용 선택, html.parser로 HTML로 파싱</span></span><br><span class="line">dom = BeautifulSoup(response.content, <span class="string">"html.parser"</span>)</span><br></pre></td></tr></table></figure><blockquote><h4 id="bs4-BeautifulSoupr"><a href="#bs4-BeautifulSoupr" class="headerlink" title="bs4.BeautifulSoupr"></a><code>bs4.BeautifulSoupr</code></h4><p>select 매서드 : 여러개의 element 객체를 리스트로 가져옴<br>select_one 매서드 : 하나의 element 객체를 가져옴</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 크롬 개발자 도구에서 copy selector했을때 id가 나올때 까지 찾아 복사함</span></span><br><span class="line"><span class="comment"># 리스트안의 딕셔너리 형태로 만들어줌&#123;"컬럼명":내용&#125;</span></span><br><span class="line">datas = []</span><br><span class="line"><span class="keyword">for</span> element <span class="keyword">in</span> elements:</span><br><span class="line">    datas.append(&#123;</span><br><span class="line">        <span class="string">"title"</span>: element.select_one(<span class="string">'.tit_g'</span>).text.strip().replace(<span class="string">"\n"</span>,<span class="string">""</span>), <span class="comment">#tit_g이름의 클래스 안에 텍스트를 잡음</span></span><br><span class="line">        <span class="string">"link"</span> : element.select_one(<span class="string">'a'</span>).get(<span class="string">"href"</span>), <span class="comment">#href속성의 값을 가져옴</span></span><br><span class="line">    &#125;)</span><br><span class="line">article_df = pd.DataFrame(datas)</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://howardhowonyu.github.io/2020/02/21/TIL-crawling-2020-02-21-crawling/#disqus_thread</comments>
    </item>
    
    <item>
      <title>데이터 전처리</title>
      <link>https://howardhowonyu.github.io/2020/02/20/TIL-mathematics-2020-02-20-regression-analysis/</link>
      <guid>https://howardhowonyu.github.io/2020/02/20/TIL-mathematics-2020-02-20-regression-analysis/</guid>
      <pubDate>Thu, 20 Feb 2020 13:32:43 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;데이터-전처리에-사용하는-패키지&quot;&gt;&lt;a href=&quot;#데이터-전처리에-사용하는-패키지&quot; class=&quot;headerlink&quot; title=&quot;데이터 전처리에 사용하는 패키지&quot;&gt;&lt;/a&gt;데이터 전처리에 사용하는 패키지&lt;/h1&gt;&lt;h2 id=&quot;missi
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="데이터-전처리에-사용하는-패키지"><a href="#데이터-전처리에-사용하는-패키지" class="headerlink" title="데이터 전처리에 사용하는 패키지"></a>데이터 전처리에 사용하는 패키지</h1><h2 id="missingno"><a href="#missingno" class="headerlink" title="missingno"></a>missingno</h2><ul><li>결측데이터를 검색하여 시각화 함</li><li><code>.bar()</code>, <code>.matrix()</code>함수로 확인</li></ul><h2 id="scikit-learn-패키지의-SimpleImputer-클래스"><a href="#scikit-learn-패키지의-SimpleImputer-클래스" class="headerlink" title="scikit-learn 패키지의 SimpleImputer 클래스"></a>scikit-learn 패키지의 SimpleImputer 클래스</h2><ul><li>결측값을 채우고자 할때, strategy 인수를 “mean”으로 하면 중앙값 “median”으로 하면 중앙값, “most_frequent”로 하면 최빈값을 대체값으로 사용한다.</li></ul><h2 id="patsy"><a href="#patsy" class="headerlink" title="patsy"></a>patsy</h2><ul><li>데이터를 선택, 변환, 추가, 스케일링 함</li><li><code>dmatrx()</code> 함수를 사용하면 데이터 프레임에 상수항을 추가하거나 원하는 데이터만 선택하거나 변형할 수 있다.</li><li>스케일링을 위한 함수 <ul><li>center(): 평균을 0으로 스케일링</li><li>standardize(): 평균을 0으로하고 표준편차를 1로 스케일링</li><li>scale(): standardize() 과 같음</li></ul></li></ul>]]></content:encoded>
      
      <comments>https://howardhowonyu.github.io/2020/02/20/TIL-mathematics-2020-02-20-regression-analysis/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Oauth, fake_useragent 활용</title>
      <link>https://howardhowonyu.github.io/2020/02/20/TIL-crawling-2020-02-20-Oauth/</link>
      <guid>https://howardhowonyu.github.io/2020/02/20/TIL-crawling-2020-02-20-Oauth/</guid>
      <pubDate>Thu, 20 Feb 2020 05:25:11 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;Oauth&quot;&gt;&lt;a href=&quot;#Oauth&quot; class=&quot;headerlink&quot; title=&quot;Oauth&quot;&gt;&lt;/a&gt;Oauth&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;개념 : 서비스(서드파티)에서 페이스북, 구글등의 서비스에 접근할수 있는 권한을 요청하고 이를
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="Oauth"><a href="#Oauth" class="headerlink" title="Oauth"></a>Oauth</h2><ul><li>개념 : 서비스(서드파티)에서 페이스북, 구글등의 서비스에 접근할수 있는 권한을 요청하고 이를 사용할수 있는 키를 발급해주는 절차</li></ul><blockquote><p>1단계: 서비스에서 페이스북, 구글등에 등록을 요청하면, request_token을 발급<br>2단계: 유저가 서비스에서 서드파티의 데이터를 가져오고자 하면, 서드파티에 oauth page를 띄움, 수락하면 이 유저에 대한 access_token을 발급<br>3단계: 서비스는 request_token과 access_token으로 서드파티에 데이터를 요청하고 받아옴</p></blockquote><h2 id="Oauth를-활용한-구글-스프레드시트-데이터-업로드-작업-순서"><a href="#Oauth를-활용한-구글-스프레드시트-데이터-업로드-작업-순서" class="headerlink" title="Oauth를 활용한 구글 스프레드시트 데이터 업로드 작업 순서"></a>Oauth를 활용한 구글 스프레드시트 데이터 업로드 작업 순서</h2><ol><li>oauth 인증 파일 생성</li><li>프로젝트 생성<ul><li>라이브러리 탭선택: Google Drive API, Google sheet API 사용설정</li><li>Oauth 동의화면<ul><li>어플리케이션 이름 설정</li><li>google api 범위 추가: drive, spreadsheets</li><li>저장</li></ul></li><li>사용자 인증정보<ul><li>Oauth클라이언트 ID 만들기</li></ul></li></ul></li><li>스프레드 시트에 크롤링한 데이터 저장 및 로드</li></ol><h2 id="fake-useragent"><a href="#fake-useragent" class="headerlink" title="fake_useragent"></a>fake_useragent</h2><ul><li>user_agent를 랜덤으로 생성하는 패키지</li><li>headers에 임의로 값을 지정해주고 requests해주는 방법으로 데이터 접근 가능</li><li>user-agent외에도 refere(접근 이전에 방문했던 페이지의 URL)등도 지정<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">url = <span class="string">"https://finance.daum.net/api/exchanges/summaries"</span></span><br><span class="line">headers=&#123;</span><br><span class="line">    <span class="string">"user-agent"</span> : UserAgent().chrome,</span><br><span class="line">    <span class="string">"referer"</span> : <span class="string">"https://finance.daum.net/exchanges"</span></span><br><span class="line">&#125;</span><br><span class="line">response = requests.get(url,headers=headers)</span><br><span class="line">response</span><br></pre></td></tr></table></figure></li></ul>]]></content:encoded>
      
      <comments>https://howardhowonyu.github.io/2020/02/20/TIL-crawling-2020-02-20-Oauth/#disqus_thread</comments>
    </item>
    
    <item>
      <title>데이터 크롤링, 시각화, 정규화</title>
      <link>https://howardhowonyu.github.io/2020/02/20/TIL-crawling-2020-02-20-crawling/</link>
      <guid>https://howardhowonyu.github.io/2020/02/20/TIL-crawling-2020-02-20-crawling/</guid>
      <pubDate>Thu, 20 Feb 2020 05:16:02 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;web-crawling&quot;&gt;&lt;a href=&quot;#web-crawling&quot; class=&quot;headerlink&quot; title=&quot;web crawling&quot;&gt;&lt;/a&gt;web crawling&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;requests : json : 동적페이지(
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="web-crawling"><a href="#web-crawling" class="headerlink" title="web crawling"></a>web crawling</h2><ol><li>requests : json : 동적페이지(URL 변경 없이 데이터를 수정 및 추가)</li><li>requests : html : 정적페이지(URL 변경 으로 데이터를 수정 및 추가)</li><li>selenium : web browser : 1,2 번 방법을 사용하지 못할때 사용, 브라우저를 직접 조작</li></ol><h2 id="json"><a href="#json" class="headerlink" title="json"></a>json</h2><ul><li>문자열 데이터를 dict로 바꿔서 저장</li></ul><h2 id="크롤링-절차"><a href="#크롤링-절차" class="headerlink" title="크롤링 절차"></a>크롤링 절차</h2><ol><li>웹서비스 분석 : URL 분석하기, </li><li>request, response 하기 : json을 얻음</li><li>문자열 json 데이터를 dict로 파싱후 데이터 프레임으로 생성</li></ol><h2 id="requests-get-url-headers-params"><a href="#requests-get-url-headers-params" class="headerlink" title="requests.get(url,headers=params)"></a>requests.get(url,headers=params)</h2><ul><li>params라는 변수에 딕셔너리 형해로, user agent, cookie등을 임의로 설정을 해주는 방식으로 해결</li></ul><h2 id="정규화-Normalization"><a href="#정규화-Normalization" class="headerlink" title="정규화 : Normalization"></a>정규화 : Normalization</h2><ul><li><code>z = (x - min(x)) / (max(x) - min(x))</code></li><li>같은 기준을 놓고 비교하기 위한 절차</li></ul><h2 id="API로-날씨-정보-가져오기"><a href="#API로-날씨-정보-가져오기" class="headerlink" title="API로 날씨 정보 가져오기"></a>API로 날씨 정보 가져오기</h2><ul><li>darksky.net 서비스를 이용</li><li>restAPI : 키값을 감춰서 깔끔한 URL을 만들수 있다. </li></ul><h2 id="직방-데이터-크롤링"><a href="#직방-데이터-크롤링" class="headerlink" title="직방 데이터 크롤링"></a>직방 데이터 크롤링</h2><ul><li>동이름을 입력하여 아파트 메물을 데이터 프레임으로 만드는 작업</li><li><code>%%writefile</code> -&gt; 모듈화 하여 저장</li></ul><h2 id="robots-txt"><a href="#robots-txt" class="headerlink" title="robots.txt"></a>robots.txt</h2><ul><li>각 도메인 별로 접근 권한 등의 규칙을 저장해 놓은 파일<blockquote><p>예) User-agent : *<br>   Allow : / </p></blockquote></li></ul>]]></content:encoded>
      
      <comments>https://howardhowonyu.github.io/2020/02/20/TIL-crawling-2020-02-20-crawling/#disqus_thread</comments>
    </item>
    
    <item>
      <title>데이터 분석, 데이터 전처리 기초</title>
      <link>https://howardhowonyu.github.io/2020/02/18/TIL-regression-analysis-2020-02-18-regression-analysis/</link>
      <guid>https://howardhowonyu.github.io/2020/02/18/TIL-regression-analysis-2020-02-18-regression-analysis/</guid>
      <pubDate>Tue, 18 Feb 2020 13:09:46 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;데이터-분석이란&quot;&gt;&lt;a href=&quot;#데이터-분석이란&quot; class=&quot;headerlink&quot; title=&quot;데이터 분석이란?&quot;&gt;&lt;/a&gt;데이터 분석이란?&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;데이터 간의 관계를 사용하여 우리가 원하는 새로운 출력데이터를 만들어
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="데이터-분석이란"><a href="#데이터-분석이란" class="headerlink" title="데이터 분석이란?"></a>데이터 분석이란?</h2><ul><li>데이터 간의 관계를 사용하여 우리가 원하는 새로운 출력데이터를 만들어 내는 과정</li></ul><h2 id="예측"><a href="#예측" class="headerlink" title="예측"></a>예측</h2><ul><li>여러가지 입력 데이터를 주면, 데이터 분석의 결과로 다른 데이터를 출력</li></ul><h2 id="입력데이터-input-data-출력데이터-output-data"><a href="#입력데이터-input-data-출력데이터-output-data" class="headerlink" title="입력데이터(input data), 출력데이터(output data)"></a>입력데이터(input data), 출력데이터(output data)</h2><ul><li>독립변수, 특징, 설명변수</li><li>종속변수, 라벨, 클라스(카테고리 값)</li></ul><h2 id="규칙기반과-학습기반"><a href="#규칙기반과-학습기반" class="headerlink" title="규칙기반과 학습기반"></a>규칙기반과 학습기반</h2><ul><li>규칙기반 방법은 사람이 규칙을 미리 만들어 놓는 방법</li><li>학습기반 방법은 규칙을 기계가 만들도록 하는 방법</li></ul><h2 id="지도학습"><a href="#지도학습" class="headerlink" title="지도학습"></a>지도학습</h2><ul><li>목표값이 있어야 학습가능하기 때문에, 입력데이터에 목표값을 붙여주는 작업이 필요하고 이를 레이블링이라 한다.</li><li>지도학습에서 가장 힘든 작업이 레이블링</li></ul><h2 id="인코딩"><a href="#인코딩" class="headerlink" title="인코딩"></a>인코딩</h2><ul><li>현실의 데이터를 컴퓨터가 처리할수 있는 데이터로 바꾸는것</li><li>이미지는 벡터화 시키고, 문서는 BOW방식을 사용<ul><li>BOW(Bag of words): 특정 단어가 몇번 나왔는지를 세어 빈도를 벡터로 표시하는 방법, 단어장을 만들어 각 단어별 번호를 메긴후 문서별로 번호를 셈</li></ul></li></ul><h2 id="입력차원"><a href="#입력차원" class="headerlink" title="입력차원"></a>입력차원</h2><ul><li>데이터를 입력받는 구멍, 한번 정하면 바꾸기 힘듦</li></ul><h2 id="카테고리값"><a href="#카테고리값" class="headerlink" title="카테고리값"></a>카테고리값</h2><ul><li>범주형 값이라고 하며, 비교가 불가능한 데이터</li></ul><h2 id="회기분석과-분류문제"><a href="#회기분석과-분류문제" class="headerlink" title="회기분석과 분류문제"></a>회기분석과 분류문제</h2><ul><li>회기분석은 답이 되는 숫자를 써야하는 단답형 문제를 푸는것</li><li>분류 문제는 4지 선다 문제 같이 답을 정하는 것</li></ul><h2 id="비지도-학습"><a href="#비지도-학습" class="headerlink" title="비지도 학습"></a>비지도 학습</h2><ul><li>지도학습을 제외한 모든 머신러닝 방식</li><li>클러스터링 : 비슷한 데이터를 같은 그룹으로 모으는것</li><li>imputation(impating): 빠진 그림을 채우는 등의 작업</li></ul><h1 id="데이터-전처리에-사용하는-패키지"><a href="#데이터-전처리에-사용하는-패키지" class="headerlink" title="데이터 전처리에 사용하는 패키지"></a>데이터 전처리에 사용하는 패키지</h1><h2 id="missingno"><a href="#missingno" class="headerlink" title="missingno"></a>missingno</h2><ul><li>결측데이터를 검색하여 시각화 함</li><li><code>.bar()</code>, <code>.matrix()</code>함수로 확인</li></ul><h2 id="scikit-learn-패키지의-SimpleImputer-클래스"><a href="#scikit-learn-패키지의-SimpleImputer-클래스" class="headerlink" title="scikit-learn 패키지의 SimpleImputer 클래스"></a>scikit-learn 패키지의 SimpleImputer 클래스</h2><ul><li>결측값을 채우고자 할때, strategy 인수를 “mean”으로 하면 중앙값 “median”으로 하면 중앙값, “most_frequent”로 하면 최빈값을 대체값으로 사용한다.</li></ul><h2 id="patsy"><a href="#patsy" class="headerlink" title="patsy"></a>patsy</h2><ul><li>데이터를 선택, 변환, 추가, 스케일링 함</li><li><code>dmatrx()</code> 함수를 사용하면 데이터 프레임에 상수항을 추가하거나 원하는 데이터만 선택하거나 변형할 수 있다.</li><li>스케일링을 위한 함수 <ul><li>center(): 평균을 0으로 스케일링</li><li>standardize(): 평균을 0으로하고 표준편차를 1로 스케일링</li><li>scale(): standardize() 과 같음</li></ul></li></ul>]]></content:encoded>
      
      <comments>https://howardhowonyu.github.io/2020/02/18/TIL-regression-analysis-2020-02-18-regression-analysis/#disqus_thread</comments>
    </item>
    
    <item>
      <title>검정과 유의확률</title>
      <link>https://howardhowonyu.github.io/2020/02/17/TIL-mathematics-2020-02-17-math/</link>
      <guid>https://howardhowonyu.github.io/2020/02/17/TIL-mathematics-2020-02-17-math/</guid>
      <pubDate>Mon, 17 Feb 2020 13:32:43 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;검정&quot;&gt;&lt;a href=&quot;#검정&quot; class=&quot;headerlink&quot; title=&quot;검정&quot;&gt;&lt;/a&gt;검정&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;확률분포에 대한 어떤 주장: 가설&lt;/li&gt;
&lt;li&gt;검정: 가설을 증명하는 행위&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;귀
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="검정"><a href="#검정" class="headerlink" title="검정"></a>검정</h2><ul><li>확률분포에 대한 어떤 주장: 가설</li><li>검정: 가설을 증명하는 행위</li></ul><h2 id="귀무가설과-대립가설"><a href="#귀무가설과-대립가설" class="headerlink" title="귀무가설과 대립가설"></a>귀무가설과 대립가설</h2><ul><li>등식으로 표현(=)</li><li>귀무가설과 함께 고려하는 대립가설은, 진실임을 증명하고자 하는 가설</li></ul><h2 id="검정통계량"><a href="#검정통계량" class="headerlink" title="검정통계량"></a>검정통계량</h2><ul><li>표본데이터 집합을 입력으로 계산되는 함수의 값</li><li>베르누이분포 확률변수의 검정통계량은 이항분포를 따른다.</li><li>분산 시그마^2값을 알고있는 정규분포 확률변수는, 표본평균 m을 분산으로 정규화한 값을 정규통계량으로 쓰고, 이 검정통계량은 표준정규분포를 따른다.</li><li>분산 시그마^2값을 모르는 정규분포 확률변수는, 자유도가 N-1인 스튜던트 t분포를 따른다.</li></ul><h2 id="유의확률-P-value"><a href="#유의확률-P-value" class="headerlink" title="유의확률(P-value)"></a>유의확률(P-value)</h2><ul><li>확률분포와 확률분포의 표본값이 주어졌을때, 그 확률분포에서 해당 표본값 혹은 더 희귀한 값이 나올수 있는 확률</li><li>유의확률값이 작으면 귀무가설을 기각하고 대립가설을 채택할수 있다.</li></ul><h2 id="유의수준과-기각역"><a href="#유의수준과-기각역" class="headerlink" title="유의수준과 기각역"></a>유의수준과 기각역</h2><ul><li>유의확률값이 작으면 귀무가설을 기각하고 대립가설을 채택할수 있다, 에서 “작다”는 판단을 하는 기준.</li><li>기각역 : 유의수준에 대해 계산된 검정통계량</li></ul>]]></content:encoded>
      
      <comments>https://howardhowonyu.github.io/2020/02/17/TIL-mathematics-2020-02-17-math/#disqus_thread</comments>
    </item>
    
    <item>
      <title>MySQL과 파이썬, SQLAlchemy</title>
      <link>https://howardhowonyu.github.io/2020/02/15/Database-2020-02-15-mysql-with-python/</link>
      <guid>https://howardhowonyu.github.io/2020/02/15/Database-2020-02-15-mysql-with-python/</guid>
      <pubDate>Sat, 15 Feb 2020 07:45:19 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;SQL-in-python&quot;&gt;&lt;a href=&quot;#SQL-in-python&quot; class=&quot;headerlink&quot; title=&quot;SQL in python&quot;&gt;&lt;/a&gt;SQL in python&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;데이터 베이스 연결&lt;/p
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="SQL-in-python"><a href="#SQL-in-python" class="headerlink" title="SQL in python"></a>SQL in python</h2><blockquote><p>데이터 베이스 연결</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> MySQLdb</span><br><span class="line">db = MySQLdb.connect(</span><br><span class="line">    <span class="string">"12.345.678.910"</span>, <span class="comment"># database server public ip</span></span><br><span class="line">    <span class="string">"root"</span>,          <span class="comment"># user</span></span><br><span class="line">    <span class="string">"test"</span>,           <span class="comment"># password</span></span><br><span class="line">    <span class="string">"world"</span>,         <span class="comment"># database name</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><blockquote><p>쿼리 작성</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">QUERY = <span class="string">"""</span></span><br><span class="line"><span class="string">    SHOW TABLES;</span></span><br><span class="line"><span class="string">"""</span></span><br></pre></td></tr></table></figure><blockquote><p>쿼리 실행</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curs = db.cursor()</span><br><span class="line">curs.execute(QUERY)</span><br></pre></td></tr></table></figure><blockquote><p>데이터 베이스의 테이블들의 이름을 출력</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rows = curs.fetchall()</span><br></pre></td></tr></table></figure><h2 id="판다스-데이터프레임으로-가져오기"><a href="#판다스-데이터프레임으로-가져오기" class="headerlink" title="판다스 데이터프레임으로 가져오기"></a>판다스 데이터프레임으로 가져오기</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">QUERY = <span class="string">"""</span></span><br><span class="line"><span class="string">    SELECT *</span></span><br><span class="line"><span class="string">    FROM city_population_languages</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line">df = pd.read_sql(QUERY,db)</span><br></pre></td></tr></table></figure><h2 id="SQLAlchemy"><a href="#SQLAlchemy" class="headerlink" title="SQLAlchemy"></a>SQLAlchemy</h2><p>python 에서 사용하는 ORM</p><h4 id="ORM-Object-Relational-Mapping"><a href="#ORM-Object-Relational-Mapping" class="headerlink" title="ORM : Object Relational Mapping"></a>ORM : Object Relational Mapping</h4><blockquote><p>데이터 베이스를 객체화 시켜서 데이터 베이스에 있는 데이터를 CRUD(create,read,update,delete)할수 있다.<br>쿼리 대신 함수 형태로 CRUD를 할수 있다.<br>사용하는 데이터 베이스를 변경하는 경우 엔진을 바꾸면 됨.</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.ext.declarative <span class="keyword">import</span> declarative_base</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> sessionmaker <span class="comment">#sql에 연결 시켜주는 함수</span></span><br></pre></td></tr></table></figure><h3 id="데이터-베이스-연결-유저이름-비밀번호"><a href="#데이터-베이스-연결-유저이름-비밀번호" class="headerlink" title="데이터 베이스 연결 ://유저이름.비밀번호"></a>데이터 베이스 연결 ://유저이름.비밀번호</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">engine = create_engine(<span class="string">"mysql://root:***@12.345.67.789/test"</span>)</span><br></pre></td></tr></table></figure><h3 id="테이블-객체-생성을-위한-클래스-작성"><a href="#테이블-객체-생성을-위한-클래스-작성" class="headerlink" title="테이블 객체 생성을 위한 클래스 작성"></a>테이블 객체 생성을 위한 클래스 작성</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">Base = declarative_base()</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span><span class="params">(Base)</span>:</span></span><br><span class="line">    </span><br><span class="line">    __tablename__ = <span class="string">"user"</span> <span class="comment">#테이블 이름</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">#컬럼 데이터 타입 작성</span></span><br><span class="line">    user_id = Column(Integer,primary_key=<span class="literal">True</span>)</span><br><span class="line">    name = Column(String(<span class="number">20</span>))</span><br><span class="line">    email = Column(String(<span class="number">30</span>))</span><br><span class="line">    age = Column(Integer)</span><br><span class="line">    rdate = Column(DateTime)</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 생성자 함수</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,name,email,age,rdate)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.email = email</span><br><span class="line">        self.age = age</span><br><span class="line">        self.rdate = rdate</span><br><span class="line">        </span><br><span class="line">    <span class="comment"># repr 함수</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"&lt;User &#123;&#125;,&#123;&#125;,&#123;&#125;,&#123;&#125;&gt;"</span>.format(</span><br><span class="line">            self.name, self.email, self.age, self.rdate)</span><br></pre></td></tr></table></figure><h3 id="데이터-베이스와-객체를-연결"><a href="#데이터-베이스와-객체를-연결" class="headerlink" title="데이터 베이스와 객체를 연결"></a>데이터 베이스와 객체를 연결</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># engine에 연결된 데이터 베이스(test)에 테이블 생성</span></span><br><span class="line">Base.metadata.create_all(engine)</span><br><span class="line"><span class="comment"># 데이터 베이스에 session 연결</span></span><br><span class="line">Session = sessionmaker(engine)</span><br><span class="line"><span class="comment"># 클래스를 return  받고</span></span><br><span class="line">session = Session()</span><br><span class="line"><span class="comment"># 객체 생성</span></span><br><span class="line"><span class="comment"># session은 데이터 베이스와 연결된 객체</span></span><br></pre></td></tr></table></figure><p>데이터 베이스 연결 -&gt; 테이블 객체 생성을 위한 클래스 작성 -&gt; 데이터 베이스와 객체를 연결후 사용</p><h3 id="1-Insert"><a href="#1-Insert" class="headerlink" title="1. Insert"></a>1. Insert</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># insert</span></span><br><span class="line">user = User(<span class="string">"howard"</span>,<span class="string">"howard@thisisemail.com"</span>,<span class="number">27</span>,<span class="string">"2016-03-21"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># session 객체에 데이터가 저장</span></span><br><span class="line">session.add(user)</span><br><span class="line"><span class="comment"># run tranaction : 이순간 데이터 베이스에 저장</span></span><br><span class="line">session.commit()</span><br></pre></td></tr></table></figure><blockquote><p>여러 동작을 한 tranction으로 묶어서 tranaction이 실행되는 동안은 다른 Task가 들어오지 못함.(예: 은행 계좌 출금 과정)</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># insert 여러개</span></span><br><span class="line">users = [</span><br><span class="line">    User(<span class="string">"alice"</span>,<span class="string">"alice@gmail.com"</span>,<span class="number">25</span>,<span class="string">"2018-02-21"</span>),</span><br><span class="line">    User(<span class="string">"andy"</span>,<span class="string">"andy@daum.net"</span>,<span class="number">33</span>,<span class="string">"2015-10-21"</span>),</span><br><span class="line">]</span><br><span class="line">session.add_all(users) <span class="comment"># 데이터 저장</span></span><br><span class="line">session.commit() <span class="comment"># commit으로 데이터 베이스에 저장</span></span><br></pre></td></tr></table></figure><blockquote><p>rollback : session안에 있는 객체를 초기화</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">session.rollback()</span><br></pre></td></tr></table></figure><h3 id="2-Select"><a href="#2-Select" class="headerlink" title="2. Select"></a>2. Select</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># select all</span></span><br><span class="line">results = session.query(User).all()</span><br></pre></td></tr></table></figure><blockquote><p>filter : ==, !=, &gt;, &lt;, &lt;=, &gt;=, like, in 다 쓸수 있음.<br>SQL WHERE 처럼 사용 가능</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">results = session.query(User).filter(User.name==<span class="string">"howard"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># filter : like</span></span><br><span class="line">results = session.query(User).filter(User.email.like(<span class="string">"%gmail%"</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># filter : in_</span></span><br><span class="line">results = session.query(User).filter(User.name.in_([<span class="string">"alice"</span>,<span class="string">"andy"</span>]))</span><br><span class="line"></span><br><span class="line"><span class="comment"># filter : or_</span></span><br><span class="line">results = session.query(User).filter(or_(User.name == <span class="string">"howard"</span>, User.age == <span class="number">33</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># order by : desc, asc(내림차순, 오름차순 정렬)</span></span><br><span class="line">results = session.query(User).order_by(User.age.desc())</span><br><span class="line"></span><br><span class="line"><span class="comment"># count</span></span><br><span class="line">session.query(User).count()</span><br></pre></td></tr></table></figure><h3 id="3-Updata"><a href="#3-Updata" class="headerlink" title="3. Updata"></a>3. Updata</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># data에 andy의 row데이터 가져와서</span></span><br><span class="line">data = session.query(User).filter(User.name == <span class="string">"howard"</span>).one()</span><br><span class="line"><span class="comment"># age라는 칸에 30 넣어주고</span></span><br><span class="line">data.age = <span class="number">30</span></span><br><span class="line"><span class="comment"># session에 담아서</span></span><br><span class="line">session.add(data)</span><br><span class="line"><span class="comment"># commit</span></span><br><span class="line">session.commit()</span><br></pre></td></tr></table></figure><h3 id="4-Delete"><a href="#4-Delete" class="headerlink" title="4. Delete"></a>4. Delete</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># delete row</span></span><br><span class="line">session.query(User).filter(User.name == <span class="string">'jin'</span>).delete()</span><br><span class="line"></span><br><span class="line"><span class="comment"># delete table</span></span><br><span class="line"><span class="comment"># User클래스에서 지정된 테이블인 user만 지워짐</span></span><br><span class="line">User.__table__.drop(engine)</span><br></pre></td></tr></table></figure><h3 id="5-With-Pandas"><a href="#5-With-Pandas" class="headerlink" title="5. With Pandas"></a>5. With Pandas</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="comment"># 데이터 프레임을 데이터 베이스에 넣기</span></span><br><span class="line">iris_df = sns.load_dataset(<span class="string">"iris"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># iris_df 데이터를 iris라는 이름으로 </span></span><br><span class="line"><span class="comment"># engine에서 지정된 데이터 베이스로 보낸다. </span></span><br><span class="line"><span class="comment"># 만약 존재한다면 대체(replace)한다.</span></span><br><span class="line">iris_df.to_sql(name=<span class="string">"iris"</span>,con=engine,if_exists=<span class="string">"replace"</span>)</span><br></pre></td></tr></table></figure><h3 id="6-판다스로-데이터-불러오기"><a href="#6-판다스로-데이터-불러오기" class="headerlink" title="6.판다스로 데이터 불러오기"></a>6.판다스로 데이터 불러오기</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># QUERY문 만들어서 판다스로 불러오기</span></span><br><span class="line">QUERY = <span class="string">"""</span></span><br><span class="line"><span class="string">    SELECT *</span></span><br><span class="line"><span class="string">    FROM iris</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line">city_df = pd.read_sql(QUERY,engine)</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://howardhowonyu.github.io/2020/02/15/Database-2020-02-15-mysql-with-python/#disqus_thread</comments>
    </item>
    
    <item>
      <title>MongDB</title>
      <link>https://howardhowonyu.github.io/2020/02/14/Database-2020-02-14-mongdb/</link>
      <guid>https://howardhowonyu.github.io/2020/02/14/Database-2020-02-14-mongdb/</guid>
      <pubDate>Fri, 14 Feb 2020 11:31:09 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;MongDB&quot;&gt;&lt;a href=&quot;#MongDB&quot; class=&quot;headerlink&quot; title=&quot;MongDB&quot;&gt;&lt;/a&gt;MongDB&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;RDBMS&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="MongDB"><a href="#MongDB" class="headerlink" title="MongDB"></a>MongDB</h2><table><thead><tr><th><strong>RDBMS</strong></th><th><strong>NoSQL(Not Only SQL)</strong></th></tr></thead><tbody><tr><td>Database</td><td>Database</td></tr><tr><td>Table</td><td>Collection</td></tr><tr><td>Row / Record</td><td>Document</td></tr><tr><td>Column</td><td>Key / Filed</td></tr></tbody></table><h3 id="컬렉션-생성"><a href="#컬렉션-생성" class="headerlink" title="컬렉션 생성"></a>컬렉션 생성</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">use dss</span><br><span class="line">db.createCollection(<span class="string">"user"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">db.createCollection(<span class="string">"user2"</span>,</span><br><span class="line">    &#123;<span class="attr">autoIndexId</span>:<span class="literal">true</span>, <span class="attr">capped</span>:<span class="literal">true</span>, <span class="attr">size</span>:<span class="number">50</span>, <span class="attr">max</span>:<span class="number">5</span>&#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">-- 지우기</span><br><span class="line">db.user.drop()</span><br></pre></td></tr></table></figure><p>크기가 500바이트, document 최대 5개 까지, 5개가 되기전에 용량이 500바이트를 넘기면, 제일 과거의 데이터를 삭제하면서 들어감</p><h3 id="Insert"><a href="#Insert" class="headerlink" title="Insert"></a>Insert</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">db.user1.insert(&#123;<span class="string">"subject"</span>:<span class="string">"python"</span>,<span class="string">"level"</span>:<span class="number">3</span>&#125;)</span><br><span class="line">db.user1.insert(&#123;<span class="string">"subject"</span>:<span class="string">"web"</span>,<span class="string">"level"</span>:<span class="number">2</span>&#125;)</span><br><span class="line">db.user1.insert(&#123;<span class="string">"subject"</span>:<span class="string">"sql"</span>,<span class="string">"level"</span>:<span class="number">1</span>&#125;)</span><br></pre></td></tr></table></figure><blockquote><p>여러개 Insert<br>SQL 처럼 collection 생성하고 넣을 필요 없이. 이름 정해서 데이터 바로 넣으면 그냥 생성됨</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">db.info.insert([</span><br><span class="line">    &#123;<span class="string">"subject"</span>:<span class="string">"python"</span>,<span class="string">"level"</span>:<span class="number">3</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"subject"</span>:<span class="string">"web"</span>,<span class="string">"level"</span>:<span class="number">2</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"subject"</span>:<span class="string">"sql"</span>,<span class="string">"level"</span>:<span class="number">1</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"subject"</span>:<span class="string">"python"</span>,<span class="string">"level"</span>:<span class="number">3</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"subject"</span>:<span class="string">"web"</span>,<span class="string">"level"</span>:<span class="number">2</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"subject"</span>:<span class="string">"sql"</span>,<span class="string">"level"</span>:<span class="number">1</span>&#125;,</span><br><span class="line">])</span><br></pre></td></tr></table></figure><blockquote><p>제약조건이 있으면 remove 쓸수 없음</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.info.remove(&#123;<span class="attr">level</span>:<span class="number">2</span>&#125;)</span><br></pre></td></tr></table></figure><h2 id="FIND-필터링"><a href="#FIND-필터링" class="headerlink" title="FIND (필터링)"></a>FIND (필터링)</h2><blockquote><p>find(query, projection)<br>query : where 절<br>projection : select, 보여지는 filed</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.info.find(&#123;<span class="string">"subject"</span>:<span class="string">"python"</span>&#125;)</span><br></pre></td></tr></table></figure><blockquote><p>lte : 작거나 같다</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.info.find(&#123;<span class="string">"level"</span>:  &#123;<span class="attr">$lte</span>:<span class="number">2</span>&#125;&#125;)</span><br></pre></td></tr></table></figure><blockquote><p>in : 선택</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.info.find(&#123;<span class="string">"subject"</span>: &#123;<span class="attr">$in</span>: [<span class="string">"java"</span>,<span class="string">"python"</span>]&#125;&#125;)</span><br></pre></td></tr></table></figure><blockquote><p>논리연산자 : $or, $and, $not, $nor</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">db.info.find(&#123;<span class="attr">$and</span> : [&#123;<span class="string">"subject"</span>:<span class="string">"python"</span>&#125;,&#123;<span class="string">"level"</span>:&#123;<span class="attr">$gte</span>:<span class="number">3</span>&#125;&#125;]&#125;)</span><br><span class="line">db.info.find(&#123;<span class="attr">$nor</span> : [&#123;<span class="string">"subject"</span>:<span class="string">"python"</span>&#125;,&#123;<span class="string">"level"</span>:&#123;<span class="attr">$gte</span>:<span class="number">3</span>&#125;&#125;]&#125;)</span><br></pre></td></tr></table></figure><blockquote><p>자바스크립트 문법</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.info.find(&#123;<span class="attr">$where</span>:<span class="string">"this.level == 1"</span>&#125;)</span><br></pre></td></tr></table></figure><blockquote><p>projection : mysql에서 select 할때 column 지정</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">db.info.find(&#123;&#125;,&#123;<span class="string">"_id"</span>:<span class="literal">false</span>,<span class="string">"level"</span>:<span class="literal">false</span>&#125;)</span><br><span class="line">db.info.find(&#123;&#125;,&#123;<span class="string">"subject"</span>:<span class="literal">true</span>,<span class="string">"level"</span>:<span class="literal">true</span>&#125;)</span><br><span class="line">db.info.find(&#123;&#125;,&#123;<span class="string">"subject"</span>:<span class="literal">true</span>,<span class="string">"level"</span>:<span class="literal">true</span>,<span class="string">"_id"</span>:<span class="literal">false</span>&#125;)</span><br></pre></td></tr></table></figure><blockquote><p>sort : 1(오름차순),-1(내림차순)</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">db.info.find().sort(&#123;<span class="string">"level"</span>:<span class="number">1</span>&#125;)</span><br><span class="line">db.info.find().sort(&#123;<span class="string">"level"</span>:<span class="number">-1</span>&#125;)</span><br><span class="line">db.info.find().sort(&#123;<span class="string">"level"</span>:<span class="number">-1</span>,<span class="string">"subject"</span>:<span class="number">1</span>&#125;)</span><br></pre></td></tr></table></figure><blockquote><p>limit &amp; skip : limit는 아래로 몇개, skip은 몇개 뛰어넘고 그 다음 부터 시작</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-- limit</span><br><span class="line">db.info.find().limit(<span class="number">3</span>)</span><br><span class="line">db.info.find().sort(&#123;<span class="string">"level"</span>:<span class="number">1</span>&#125;).limit(<span class="number">3</span>)</span><br><span class="line">-- skip </span><br><span class="line">db.info.find().skip(<span class="number">2</span>).limit(<span class="number">3</span>)</span><br></pre></td></tr></table></figure><h2 id="UPDATE"><a href="#UPDATE" class="headerlink" title="UPDATE"></a>UPDATE</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">db.info.update(</span><br><span class="line">    &#123;<span class="string">"subject"</span>:<span class="string">"html"</span>&#125;,<span class="comment">//query</span></span><br><span class="line">    &#123;<span class="string">"subject"</span>:<span class="string">"sass"</span>,<span class="string">"level"</span>:<span class="number">2</span>&#125;<span class="comment">//수정할내용</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><blockquote><p>upsert : 데이터가 있으면 update, 없으면 insert<br>기본적으로 1개만 업데이트. multi:true 해줘야 여러개 업데이트</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">db.info.update(</span><br><span class="line">    &#123;<span class="string">"subject"</span>:<span class="string">"less"</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"subject"</span>:<span class="string">"less"</span>,<span class="string">"level"</span>:<span class="number">2</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"upsert"</span>:<span class="literal">true</span>&#125; </span><br><span class="line">    -- subject에 less가 없는데 upsert: <span class="literal">true</span>이므로 &#123;<span class="string">"subject"</span>:<span class="string">"less"</span>,<span class="string">"level"</span>:<span class="number">2</span>&#125;로 데이터 입력했음</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="set-unset"><a href="#set-unset" class="headerlink" title="$set, $unset"></a>$set, $unset</h2><p>특정 데이터를 수정</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">db.info.update(</span><br><span class="line">    &#123;<span class="string">"level"</span>:<span class="number">2</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"$set"</span>:&#123;<span class="string">"level"</span>:<span class="number">1</span>&#125;&#125;,</span><br><span class="line">    &#123;<span class="attr">multi</span>:<span class="literal">true</span>&#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="function"><a href="#function" class="headerlink" title="function"></a>function</h2><p>함수 사용가능</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> showSkip = <span class="function"><span class="keyword">function</span>(<span class="params">start</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> db.info.find().skip(start<span class="number">-1</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">showSkip(<span class="number">2</span>)</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://howardhowonyu.github.io/2020/02/14/Database-2020-02-14-mongdb/#disqus_thread</comments>
    </item>
    
    <item>
      <title>mySQL quiz</title>
      <link>https://howardhowonyu.github.io/2020/02/14/TIL-Database-2020-02-14-mySQL/</link>
      <guid>https://howardhowonyu.github.io/2020/02/14/TIL-Database-2020-02-14-mySQL/</guid>
      <pubDate>Fri, 14 Feb 2020 10:59:14 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;QUIZ&quot;&gt;&lt;a href=&quot;#QUIZ&quot; class=&quot;headerlink&quot; title=&quot;QUIZ&quot;&gt;&lt;/a&gt;QUIZ&lt;/h2&gt;&lt;p&gt;사용하는 언어가 3가지 이하인 국가중 도시인구가 300만 이상인 도시를 아래와 같이 조회하세요.&lt;/p&gt;
&lt;fig
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="QUIZ"><a href="#QUIZ" class="headerlink" title="QUIZ"></a>QUIZ</h2><p>사용하는 언어가 3가지 이하인 국가중 도시인구가 300만 이상인 도시를 아래와 같이 조회하세요.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> country.code, city_population_languages.city_name, city_population_languages.population, country.name, city_population_languages.language_count, city_population_languages.languages</span><br><span class="line"><span class="keyword">from</span> country</span><br><span class="line"><span class="keyword">join</span></span><br><span class="line">city_population_languages</span><br><span class="line"><span class="keyword">on</span> country.code = city_population_languages.countrycode</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> city_population_languages.population <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure><blockquote><p>VIEW를 이용한 분할관리</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> city_population_languages <span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> city_population.name <span class="keyword">as</span> city_name, countrylanguage.countrycode,</span><br><span class="line"><span class="keyword">count</span>(countrylanguage.language) <span class="keyword">as</span> language_count, </span><br><span class="line"><span class="keyword">group_concat</span>(countrylanguage.language) <span class="keyword">as</span> languages, city_population.population</span><br><span class="line"><span class="keyword">from</span> countrylanguage</span><br><span class="line"><span class="keyword">join</span></span><br><span class="line">(<span class="keyword">select</span> <span class="keyword">name</span>, population, countrycode</span><br><span class="line"><span class="keyword">from</span> city</span><br><span class="line"><span class="keyword">where</span> population &gt;= <span class="number">3000000</span>) <span class="keyword">as</span> city_population</span><br><span class="line"><span class="keyword">on</span> countrylanguage.countrycode = city_population.countrycode</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> countrylanguage.CountryCode, city_population.population, city_population.name </span><br><span class="line"><span class="keyword">having</span> language_count &lt;= <span class="number">3</span>;</span><br></pre></td></tr></table></figure><blockquote><p>group by 할때 ,로 여러개 동시에 group by 할수 있음<br>group by countrylanguage.CountryCode, city_population.population, city_population.name 처럼 여러개로 했었으면 더 빨리 풀수 있었음</p></blockquote><h2 id="QUIZ-1"><a href="#QUIZ-1" class="headerlink" title="QUIZ"></a>QUIZ</h2><p> ,로 구분해서 좌측부터 겹치는 부분만 걸러가면서 오른쪽으로 진행<br> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> category.name, <span class="keyword">sum</span>(payment.amount) <span class="keyword">as</span> total_amount</span><br><span class="line"><span class="keyword">from</span> payment, rental, inventory, film_category, <span class="keyword">category</span></span><br><span class="line"><span class="keyword">where</span> payment.rental_id = rental.rental_id</span><br><span class="line"><span class="keyword">and</span> rental.inventory_id = inventory.inventory_id</span><br><span class="line"><span class="keyword">and</span> inventory.film_id = film_category.film_id</span><br><span class="line"><span class="keyword">and</span> film_category.category_id = category.category_id</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> category.name</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> total_amount <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure></p>]]></content:encoded>
      
      <comments>https://howardhowonyu.github.io/2020/02/14/TIL-Database-2020-02-14-mySQL/#disqus_thread</comments>
    </item>
    
    <item>
      <title>mySQL 공부 퀴즈 정리</title>
      <link>https://howardhowonyu.github.io/2020/02/13/TIL-Database-2020-02-13-mysql-study/</link>
      <guid>https://howardhowonyu.github.io/2020/02/13/TIL-Database-2020-02-13-mysql-study/</guid>
      <pubDate>Thu, 13 Feb 2020 10:28:13 GMT</pubDate>
      <description>
      
        
        
          &lt;h4 id=&quot;멕시코보다-인구가-많은-나라이름과-인구수를-조회후-인구수-순으로-내림차순-정리&quot;&gt;&lt;a href=&quot;#멕시코보다-인구가-많은-나라이름과-인구수를-조회후-인구수-순으로-내림차순-정리&quot; class=&quot;headerlink&quot; title=&quot;멕시코보다 
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h4 id="멕시코보다-인구가-많은-나라이름과-인구수를-조회후-인구수-순으로-내림차순-정리"><a href="#멕시코보다-인구가-많은-나라이름과-인구수를-조회후-인구수-순으로-내림차순-정리" class="headerlink" title="멕시코보다 인구가 많은 나라이름과 인구수를 조회후, 인구수 순으로 내림차순 정리"></a>멕시코보다 인구가 많은 나라이름과 인구수를 조회후, 인구수 순으로 내림차순 정리</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> world;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">name</span> ,population</span><br><span class="line"><span class="keyword">from</span> country</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> population <span class="keyword">DESC</span></span><br><span class="line"><span class="keyword">limit</span> <span class="number">0</span>,<span class="number">10</span>;</span><br></pre></td></tr></table></figure><h4 id="국가별-몇개의-도시가-있는지-조회하고-도시수-순으로-10위까지-내림차순-정렬"><a href="#국가별-몇개의-도시가-있는지-조회하고-도시수-순으로-10위까지-내림차순-정렬" class="headerlink" title="국가별 몇개의 도시가 있는지 조회하고 도시수 순으로 10위까지 내림차순 정렬"></a>국가별 몇개의 도시가 있는지 조회하고 도시수 순으로 10위까지 내림차순 정렬</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> country.name, <span class="keyword">count</span>(city.countrycode) <span class="keyword">as</span> <span class="keyword">count</span></span><br><span class="line"><span class="keyword">from</span> city</span><br><span class="line"><span class="keyword">join</span> country</span><br><span class="line"><span class="keyword">on</span> city.countrycode = country.code</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> country.name</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">count</span> <span class="keyword">DESC</span></span><br><span class="line"><span class="keyword">limit</span> <span class="number">0</span>,<span class="number">10</span>;</span><br></pre></td></tr></table></figure><h4 id="언어별-사용인구를-출력하고-사용인구-순으로-10위까지-내림차순"><a href="#언어별-사용인구를-출력하고-사용인구-순으로-10위까지-내림차순" class="headerlink" title="언어별 사용인구를 출력하고 사용인구 순으로 10위까지 내림차순"></a>언어별 사용인구를 출력하고 사용인구 순으로 10위까지 내림차순</h4><p><strong>언어별 퍼센트가 있어서 계산후 합산 했었어야 함</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> countrylanguage.Language,  <span class="keyword">round</span>(<span class="keyword">sum</span>(country.population * countrylanguage.Percentage)) <span class="keyword">as</span> <span class="keyword">count</span></span><br><span class="line"><span class="keyword">from</span> countrylanguage</span><br><span class="line"><span class="keyword">join</span> country</span><br><span class="line"><span class="keyword">on</span> country.Code = countrylanguage.CountryCode</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> countrylanguage.Language</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">count</span> <span class="keyword">DESC</span></span><br><span class="line"><span class="keyword">limit</span> <span class="number">0</span>,<span class="number">10</span>;</span><br></pre></td></tr></table></figure><h4 id="나라-전체-인구의-10-이상인-도시에서-도시인구가-500만이-넘는-도시를-아래와-같이-조사"><a href="#나라-전체-인구의-10-이상인-도시에서-도시인구가-500만이-넘는-도시를-아래와-같이-조사" class="headerlink" title="나라 전체 인구의 10% 이상인 도시에서 도시인구가 500만이 넘는 도시를 아래와 같이 조사"></a>나라 전체 인구의 10% 이상인 도시에서 도시인구가 500만이 넘는 도시를 아래와 같이 조사</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> city.name, city.countrycode, country.name, <span class="keyword">round</span>((city.population / country.population * <span class="number">100</span>),<span class="number">2</span>) <span class="keyword">as</span> percentage</span><br><span class="line"><span class="keyword">from</span> country</span><br><span class="line"><span class="keyword">join</span> (</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">name</span>,countrycode, population</span><br><span class="line"><span class="keyword">from</span> city</span><br><span class="line"><span class="keyword">where</span> population &gt;= <span class="number">5000000</span>) <span class="keyword">as</span> city</span><br><span class="line"><span class="keyword">on</span> city.countrycode = country.code</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> percentage <span class="keyword">DESC</span></span><br><span class="line"><span class="keyword">limit</span> <span class="number">0</span>,<span class="number">6</span>;</span><br></pre></td></tr></table></figure><h4 id="면적이-10000km-2이상인-국가의-인구밀도-1km-2당-인구수-를-구하고-인구밀도가-200이상인-국가들이-사용하고-있는-언어수가-5가지-이상인-라라를-조회하세요"><a href="#면적이-10000km-2이상인-국가의-인구밀도-1km-2당-인구수-를-구하고-인구밀도가-200이상인-국가들이-사용하고-있는-언어수가-5가지-이상인-라라를-조회하세요" class="headerlink" title="면적이 10000km^2이상인 국가의 인구밀도(1km^2당 인구수)를 구하고 인구밀도가 200이상인 국가들이 사용하고 있는 언어수가 5가지 이상인 라라를 조회하세요."></a>면적이 10000km^2이상인 국가의 인구밀도(1km^2당 인구수)를 구하고 인구밀도가 200이상인 국가들이 사용하고 있는 언어수가 5가지 이상인 라라를 조회하세요.</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">name</span>, <span class="keyword">count</span>(<span class="keyword">language</span>) <span class="keyword">as</span> language_count</span><br><span class="line"><span class="keyword">from</span> countrylanguage</span><br><span class="line"><span class="keyword">join</span> (</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> country.code, country.name, <span class="keyword">round</span>((country.population /surfacearea.SurfaceArea)) <span class="keyword">as</span> density</span><br><span class="line"><span class="keyword">from</span> country</span><br><span class="line"><span class="keyword">join</span> (</span><br><span class="line"><span class="keyword">select</span> code, <span class="keyword">name</span>, surfacearea</span><br><span class="line"><span class="keyword">from</span> country</span><br><span class="line"><span class="keyword">where</span> surfacearea &gt; <span class="number">10000</span>) <span class="keyword">as</span> surfacearea</span><br><span class="line"></span><br><span class="line"><span class="keyword">on</span> country.code = surfacearea.code</span><br><span class="line"><span class="keyword">having</span> density &gt;= <span class="number">200</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> density <span class="keyword">DESC</span>) <span class="keyword">as</span> <span class="keyword">test</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">on</span> test.code = countrylanguage.countrycode</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">name</span></span><br><span class="line"><span class="keyword">having</span> language_count &gt;= <span class="number">5</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> language_count <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure><h4 id="가장-돈을-많이-지불한-상위-5명의-고객의-이름과-지불-금액-출력"><a href="#가장-돈을-많이-지불한-상위-5명의-고객의-이름과-지불-금액-출력" class="headerlink" title="가장 돈을 많이 지불한 상위 5명의 고객의 이름과 지불 금액 출력"></a>가장 돈을 많이 지불한 상위 5명의 고객의 이름과 지불 금액 출력</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> customer.customer_id,<span class="keyword">concat</span>(customer.first_name,<span class="string">' '</span>,customer.last_name) <span class="keyword">as</span> full_name,<span class="keyword">sum</span>(payment.amount) <span class="keyword">as</span> amount</span><br><span class="line"><span class="keyword">from</span> customer</span><br><span class="line"><span class="keyword">join</span> payment</span><br><span class="line"><span class="keyword">on</span> payment.customer_id = customer.customer_id</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> customer.customer_id</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> amount <span class="keyword">DESC</span></span><br><span class="line"><span class="keyword">limit</span> <span class="number">0</span>,<span class="number">5</span>;</span><br></pre></td></tr></table></figure><h4 id="배우별-영화-출연-횟수-출력-상위-10개"><a href="#배우별-영화-출연-횟수-출력-상위-10개" class="headerlink" title="배우별 영화 출연 횟수 출력 (상위 10개)"></a>배우별 영화 출연 횟수 출력 (상위 10개)</h4><blockquote><ul><li>컬럼: 배우이름, 출연횟수</li><li>출연횟수 순으로 내림차순</li></ul></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> actor.actor_id, <span class="keyword">concat</span>(actor.first_name, <span class="string">' '</span>, actor.last_name) <span class="keyword">as</span> full_name, <span class="keyword">count</span>(<span class="keyword">concat</span>(actor.first_name, <span class="string">' '</span>, actor.last_name)) <span class="keyword">as</span> <span class="keyword">count</span></span><br><span class="line"><span class="keyword">from</span> actor</span><br><span class="line"><span class="keyword">join</span> film_actor</span><br><span class="line"><span class="keyword">on</span> actor.actor_id = film_actor.actor_id</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> actor.actor_id</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">count</span> <span class="keyword">DESC</span>, full_name</span><br><span class="line"><span class="keyword">limit</span> <span class="number">0</span>,<span class="number">10</span>;</span><br></pre></td></tr></table></figure><h4 id="영화-카테고리별-수입-데이터를-내림차순으로-정렬"><a href="#영화-카테고리별-수입-데이터를-내림차순으로-정렬" class="headerlink" title="영화 카테고리별 수입 데이터를 내림차순으로 정렬"></a>영화 카테고리별 수입 데이터를 내림차순으로 정렬</h4><blockquote><p>payment,rental,inventory,film_category,category</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> merged_rental_id.name, <span class="keyword">sum</span>(payment.amount) <span class="keyword">as</span> total_amount</span><br><span class="line"><span class="keyword">from</span> payment</span><br><span class="line"><span class="keyword">join</span></span><br><span class="line">(<span class="keyword">select</span> rental.rental_id, merged_inventory_id.name</span><br><span class="line"><span class="keyword">from</span> rental</span><br><span class="line"><span class="keyword">join</span></span><br><span class="line">(<span class="keyword">select</span> inventory.inventory_id, inventory.film_id, merged_film_id.name</span><br><span class="line"><span class="keyword">from</span> inventory</span><br><span class="line"><span class="keyword">join</span> (</span><br><span class="line"><span class="keyword">select</span> category.category_id, category.name, film_category.film_id</span><br><span class="line"><span class="keyword">from</span> <span class="keyword">category</span></span><br><span class="line"><span class="keyword">join</span> film_category</span><br><span class="line"><span class="keyword">on</span> category.category_id = film_category.category_id) <span class="keyword">as</span> merged_film_id</span><br><span class="line"><span class="comment"># as에서 지정해준 이름으로 안의 컬럼을 찾아 들어간다</span></span><br><span class="line"><span class="keyword">on</span> inventory.film_id = merged_film_id.film_id) <span class="keyword">as</span> merged_inventory_id</span><br><span class="line"><span class="keyword">on</span> merged_inventory_id.inventory_id = rental.inventory_id) <span class="keyword">as</span> merged_rental_id</span><br><span class="line"><span class="keyword">on</span> merged_rental_id.rental_id = payment.rental_id</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">name</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> total_amount <span class="keyword">DESC</span></span><br><span class="line"><span class="keyword">limit</span> <span class="number">0</span>,<span class="number">11</span>;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://howardhowonyu.github.io/2020/02/13/TIL-Database-2020-02-13-mysql-study/#disqus_thread</comments>
    </item>
    
    <item>
      <title>mySQL 2</title>
      <link>https://howardhowonyu.github.io/2020/02/13/Database-2020-02-13-mySQL-md/</link>
      <guid>https://howardhowonyu.github.io/2020/02/13/Database-2020-02-13-mySQL-md/</guid>
      <pubDate>Thu, 13 Feb 2020 10:11:25 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;JOIN&quot;&gt;&lt;a href=&quot;#JOIN&quot; class=&quot;headerlink&quot; title=&quot;JOIN&quot;&gt;&lt;/a&gt;JOIN&lt;/h1&gt;&lt;h3 id=&quot;left-join&quot;&gt;&lt;a href=&quot;#left-join&quot; class=&quot;headerlink&quot; title=
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="JOIN"><a href="#JOIN" class="headerlink" title="JOIN"></a>JOIN</h1><h3 id="left-join"><a href="#left-join" class="headerlink" title="left join"></a>left join</h3><p>왼쪽 테이블을 기준으로 왼쪽 테이블의 모든 데이터가 출력되고 매핑되는 키값이 없으면 NULL로 출력된다.</p><blockquote><p>두 테이블을 합쳐 id, name, addr 출력</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> addr.id ,addr.addr, <span class="keyword">IFNULL</span>(user.name,<span class="string">"-"</span>) <span class="keyword">as</span> <span class="keyword">name</span></span><br><span class="line"><span class="keyword">FROM</span> addr</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> <span class="keyword">user</span></span><br><span class="line"><span class="keyword">ON</span> user.user_id = addr.user_id;</span><br></pre></td></tr></table></figure><h3 id="right-join"><a href="#right-join" class="headerlink" title="right join"></a>right join</h3><p>오른쪽 테이블을 기준으로 왼쪽 테이블의 모든 데이터가 출력되고 매핑되는 키값이 없으면 NULL로 출력된다.</p><blockquote><p>두 테이블을 합쳐 id, name, addr 출력</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> addr.id, user.name, <span class="keyword">IFNULL</span>(addr.addr,<span class="string">'='</span>) <span class="keyword">as</span> addr</span><br><span class="line"><span class="keyword">FROM</span> addr</span><br><span class="line"><span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> <span class="keyword">user</span></span><br><span class="line"><span class="keyword">ON</span> user.user_id = addr.user_id;</span><br></pre></td></tr></table></figure><h3 id="union-outer-join"><a href="#union-outer-join" class="headerlink" title="union(outer join)"></a>union(outer join)</h3><p>select 문의 결과를 합쳐서 출력</p><blockquote><p>자동으로 중복을 제거 </p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">name</span></span><br><span class="line"><span class="keyword">from</span> <span class="keyword">user</span></span><br><span class="line"><span class="keyword">union</span></span><br><span class="line"><span class="keyword">select</span> addr</span><br><span class="line"><span class="keyword">from</span> addr;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">name</span></span><br><span class="line"><span class="keyword">from</span> <span class="keyword">user</span></span><br><span class="line"><span class="keyword">union</span> <span class="keyword">all</span></span><br><span class="line"><span class="keyword">select</span> addr</span><br><span class="line"><span class="keyword">from</span> addr;</span><br></pre></td></tr></table></figure><h3 id="outer-join"><a href="#outer-join" class="headerlink" title="outer join"></a>outer join</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> user.name, addr.addr, addr.user_id</span><br><span class="line"><span class="keyword">from</span> <span class="keyword">user</span></span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> addr</span><br><span class="line"><span class="keyword">on</span> user.user_id = addr.user_id</span><br><span class="line"><span class="keyword">union</span> </span><br><span class="line"><span class="keyword">select</span> user.name, addr.addr, addr.user_id</span><br><span class="line"><span class="keyword">from</span> <span class="keyword">user</span></span><br><span class="line"><span class="keyword">right</span> <span class="keyword">join</span> addr</span><br><span class="line"><span class="keyword">on</span> user.user_id = addr.user_id;</span><br></pre></td></tr></table></figure><h1 id="SUB-QUERY"><a href="#SUB-QUERY" class="headerlink" title="SUB-QUERY"></a>SUB-QUERY</h1><p>쿼리문 안에 쿼리가 있는 문법</p><h3 id="select-from-where"><a href="#select-from-where" class="headerlink" title="select, from, where"></a>select, from, where</h3><blockquote><p>전체 나라수, 전체 도시수, 전체 언어수를 출력</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> </span><br><span class="line">(<span class="keyword">select</span> <span class="keyword">count</span>(*)</span><br><span class="line"><span class="keyword">from</span> country) <span class="keyword">as</span> total_country,</span><br><span class="line">(<span class="keyword">select</span> <span class="keyword">count</span>(*)</span><br><span class="line"><span class="keyword">from</span> city) <span class="keyword">as</span> total_city,</span><br><span class="line">(<span class="keyword">select</span> <span class="keyword">count</span>(<span class="keyword">distinct</span>(<span class="keyword">language</span>))</span><br><span class="line"><span class="keyword">from</span> countrylanguage) <span class="keyword">as</span> total_language;</span><br></pre></td></tr></table></figure><blockquote><p>800만 이상이 되는 도시의 국가 코드, 도시이름, 도시인구수를 출력</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> *</span><br><span class="line"><span class="keyword">from</span> </span><br><span class="line">(<span class="keyword">select</span> countrycode, <span class="keyword">name</span>, population</span><br><span class="line"><span class="keyword">from</span> city</span><br><span class="line"><span class="keyword">where</span> population &gt;= <span class="number">8000000</span>) <span class="keyword">as</span> city</span><br><span class="line"><span class="keyword">join</span></span><br><span class="line">(<span class="keyword">select</span> code, <span class="keyword">name</span></span><br><span class="line"><span class="keyword">from</span> country) <span class="keyword">as</span> country</span><br><span class="line"><span class="keyword">on</span> city.countrycode = country.code;</span><br></pre></td></tr></table></figure><blockquote><p>800만 이상 도시의 국가코드, 국가 이름, 대통령 이름 출력</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> code, <span class="keyword">name</span>, HeadOfState</span><br><span class="line"><span class="keyword">from</span> country</span><br><span class="line"><span class="keyword">where</span> code <span class="keyword">in</span> (</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span>(Countrycode)</span><br><span class="line"><span class="keyword">from</span> city</span><br><span class="line"><span class="keyword">where</span> population &gt;= <span class="number">8000000</span>);</span><br><span class="line">```</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># INDEX</span></span><br><span class="line">데이터를 검색할때 바르게 찾을수 있도록 해주는 기능</span><br><span class="line">index를 해주면 <span class="keyword">insert</span>가 느려짐. 아무때나 쓰는건 아님</span><br><span class="line"></span><br><span class="line"><span class="string">``</span><span class="string">`SQL</span></span><br><span class="line"><span class="string">use employees;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">explain</span></span><br><span class="line"><span class="string">select count(*)</span></span><br><span class="line"><span class="string">from salaries</span></span><br><span class="line"><span class="string">where to_date &gt; "2000-01-01";</span></span><br></pre></td></tr></table></figure><h3 id="index-추가"><a href="#index-추가" class="headerlink" title="index 추가"></a>index 추가</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">index</span> tdate</span><br><span class="line"><span class="comment">-- salaries 테이블에  to_data에 인덱스를 만든다.</span></span><br><span class="line"><span class="keyword">on</span> salaries (<span class="keyword">to_date</span>);</span><br></pre></td></tr></table></figure><h3 id="index-삭제"><a href="#index-삭제" class="headerlink" title="index 삭제"></a>index 삭제</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">index</span> tdate</span><br><span class="line"><span class="keyword">on</span> salaries;</span><br></pre></td></tr></table></figure><h1 id="VIEW"><a href="#VIEW" class="headerlink" title="VIEW"></a>VIEW</h1><p> 쿼리문에 대한 결과를 저장하는 개념</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> world;</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> code_name <span class="keyword">as</span> </span><br><span class="line"><span class="keyword">select</span> code, <span class="keyword">name</span></span><br><span class="line"><span class="keyword">from</span> country;</span><br></pre></td></tr></table></figure><blockquote><p>*찍어주면 code_name라는 view에서 만들어진 country.code 와 country.name을 불러줌<br>즉 *는 (select code, name from country) as code_name 임</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> *</span><br><span class="line"><span class="keyword">from</span> city</span><br><span class="line"><span class="keyword">join</span> code_name</span><br><span class="line"><span class="keyword">on</span> city.countrycode = code_name.code;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://howardhowonyu.github.io/2020/02/13/Database-2020-02-13-mySQL-md/#disqus_thread</comments>
    </item>
    
    <item>
      <title>mySQL 공부 퀴즈 정리</title>
      <link>https://howardhowonyu.github.io/2020/02/12/TIL-Database-2020-02-12-mysql-md/</link>
      <guid>https://howardhowonyu.github.io/2020/02/12/TIL-Database-2020-02-12-mysql-md/</guid>
      <pubDate>Wed, 12 Feb 2020 10:36:35 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;world-sql-데이터로-푼-퀴즈&quot;&gt;&lt;a href=&quot;#world-sql-데이터로-푼-퀴즈&quot; class=&quot;headerlink&quot; title=&quot;world.sql 데이터로 푼 퀴즈&quot;&gt;&lt;/a&gt;world.sql 데이터로 푼 퀴즈&lt;/h1&gt;&lt;h3 i
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="world-sql-데이터로-푼-퀴즈"><a href="#world-sql-데이터로-푼-퀴즈" class="headerlink" title="world.sql 데이터로 푼 퀴즈"></a>world.sql 데이터로 푼 퀴즈</h1><h3 id="quiz1-country-테이블에서-중복을-제거"><a href="#quiz1-country-테이블에서-중복을-제거" class="headerlink" title="quiz1 : country 테이블에서 중복을 제거"></a>quiz1 : country 테이블에서 중복을 제거</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span>(Continent)</span><br><span class="line"><span class="keyword">FROM</span> country;</span><br></pre></td></tr></table></figure><h3 id="quiz2-한국-도시-중에서-인구가-100만명-이상인-도시를-내림차순-으로-정리"><a href="#quiz2-한국-도시-중에서-인구가-100만명-이상인-도시를-내림차순-으로-정리" class="headerlink" title="quiz2 : 한국 도시 중에서 인구가 100만명 이상인 도시를 내림차순 으로 정리"></a>quiz2 : 한국 도시 중에서 인구가 100만명 이상인 도시를 내림차순 으로 정리</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">Name</span>, Population</span><br><span class="line"><span class="keyword">FROM</span> city</span><br><span class="line"><span class="keyword">WHERE</span> CountryCode = <span class="string">"KOR"</span> <span class="keyword">AND</span> Population &gt; <span class="number">1000000</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> Population <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure><h3 id="quiz3-city-테이블에서-인구가-800만에서-1000만-사이의-도시이름-나라-코드를-출력하고-인구수순-내림차순으로-정리"><a href="#quiz3-city-테이블에서-인구가-800만에서-1000만-사이의-도시이름-나라-코드를-출력하고-인구수순-내림차순으로-정리" class="headerlink" title="quiz3 : city 테이블에서 인구가 800만에서 1000만 사이의 도시이름, 나라 코드를 출력하고, 인구수순 내림차순으로 정리"></a>quiz3 : city 테이블에서 인구가 800만에서 1000만 사이의 도시이름, 나라 코드를 출력하고, 인구수순 내림차순으로 정리</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">Name</span>, CountryCode, Population</span><br><span class="line"><span class="keyword">FROM</span> city</span><br><span class="line"><span class="keyword">WHERE</span> Population <span class="keyword">BETWEEN</span> <span class="number">8000000</span> <span class="keyword">AND</span> <span class="number">10000000</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> Population <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure><h3 id="quiz4-country-테이블에서-1940년-부터-1950년까지-독립한-국가를-조회하고-인구수순-내림차순으로-정리"><a href="#quiz4-country-테이블에서-1940년-부터-1950년까지-독립한-국가를-조회하고-인구수순-내림차순으로-정리" class="headerlink" title="quiz4: country 테이블에서 1940년 부터 1950년까지 독립한 국가를 조회하고 인구수순 내림차순으로 정리"></a>quiz4: country 테이블에서 1940년 부터 1950년까지 독립한 국가를 조회하고 인구수순 내림차순으로 정리</h3><p>NameIndep이란 컬럼을 새로 만들어서 이름(독립연도)가 들어가도록 만들었음</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> Code, <span class="keyword">concat</span>(<span class="keyword">Name</span>,<span class="string">"("</span>,IndepYear,<span class="string">")"</span>) <span class="keyword">as</span> NameIndep, Continent, Population</span><br><span class="line"><span class="keyword">FROM</span> country</span><br><span class="line"><span class="keyword">WHERE</span> IndepYear <span class="keyword">BETWEEN</span> <span class="number">1940</span> <span class="keyword">AND</span> <span class="number">1950</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> IndepYear <span class="keyword">ASC</span>, Population <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure><h3 id="quiz5-countrylanguage-테이블에서-영어-스페인어-한국어를-95-이상-사용하는-나라를-오름차순으로-정리"><a href="#quiz5-countrylanguage-테이블에서-영어-스페인어-한국어를-95-이상-사용하는-나라를-오름차순으로-정리" class="headerlink" title="quiz5 : countrylanguage 테이블에서 영어, 스페인어, 한국어를 95%이상 사용하는 나라를 오름차순으로 정리"></a>quiz5 : countrylanguage 테이블에서 영어, 스페인어, 한국어를 95%이상 사용하는 나라를 오름차순으로 정리</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> CountryCode, <span class="keyword">Language</span>, Percentage </span><br><span class="line"><span class="comment">-- / 100 붙여서 브로드캐스팅 연산으로 1 = 100% 로 변경 가능</span></span><br><span class="line"><span class="keyword">FROM</span> countrylanguage</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">Language</span> <span class="keyword">in</span> (<span class="string">"English"</span>,<span class="string">"Spanish"</span>,<span class="string">"Korean"</span>) <span class="keyword">AND</span> Percentage &gt;= <span class="number">95.0</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> Percentage;</span><br></pre></td></tr></table></figure><h3 id="quiz6-country테이블에서-code가-A로-시작하고-governmentform에-Republic이-포함되는-데이터를-조회"><a href="#quiz6-country테이블에서-code가-A로-시작하고-governmentform에-Republic이-포함되는-데이터를-조회" class="headerlink" title="quiz6 : country테이블에서 code가 A로 시작하고 governmentform에 Republic이 포함되는 데이터를 조회"></a>quiz6 : country테이블에서 code가 A로 시작하고 governmentform에 Republic이 포함되는 데이터를 조회</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> Code, <span class="keyword">Name</span>, Continent, GovernmentForm, Population</span><br><span class="line"><span class="keyword">FROM</span> country</span><br><span class="line"><span class="keyword">WHERE</span> Code <span class="keyword">like</span> <span class="string">"A%"</span> <span class="keyword">AND</span> GovernmentForm <span class="keyword">like</span> <span class="string">'%Republic%'</span>;</span><br></pre></td></tr></table></figure><h3 id="city-테이블에서-나라별-도시의-갯수를-출력"><a href="#city-테이블에서-나라별-도시의-갯수를-출력" class="headerlink" title="city 테이블에서 나라별 도시의 갯수를 출력"></a>city 테이블에서 나라별 도시의 갯수를 출력</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> CountryCode, <span class="keyword">count</span>(CountryCode)</span><br><span class="line"><span class="keyword">FROM</span> city</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> CountryCode;</span><br></pre></td></tr></table></figure><h3 id="countrylanguage-테이블에서-전체-언어의-갯수를-출력"><a href="#countrylanguage-테이블에서-전체-언어의-갯수를-출력" class="headerlink" title="countrylanguage 테이블에서 전체 언어의 갯수를 출력"></a>countrylanguage 테이블에서 전체 언어의 갯수를 출력</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">count</span>(<span class="keyword">distinct</span>(<span class="keyword">Language</span>))</span><br><span class="line"><span class="keyword">FROM</span> countrylanguage;</span><br></pre></td></tr></table></figure><h3 id="대륙별-인구수와-GNP의-최대값을-출력"><a href="#대륙별-인구수와-GNP의-최대값을-출력" class="headerlink" title="대륙별 인구수와 GNP의 최대값을 출력"></a>대륙별 인구수와 GNP의 최대값을 출력</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> continent, <span class="keyword">sum</span>(population)</span><br><span class="line"><span class="keyword">FROM</span> country</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> continent;</span><br></pre></td></tr></table></figure><h3 id="대륙별-전체인구를-구하고-5억-이상인-대륙만-출력"><a href="#대륙별-전체인구를-구하고-5억-이상인-대륙만-출력" class="headerlink" title="대륙별 전체인구를 구하고 5억 이상인 대륙만 출력"></a>대륙별 전체인구를 구하고 5억 이상인 대륙만 출력</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> continent,<span class="keyword">sum</span>(population) <span class="keyword">as</span> TotalPopulation</span><br><span class="line"><span class="keyword">FROM</span> country</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> continent</span><br><span class="line"><span class="keyword">HAVING</span> TotalPopulation &gt; <span class="number">500000000</span>;</span><br></pre></td></tr></table></figure><h2 id="HAVING-GROUP-BY가-실행되고-난-결과에-조건을-추가-즉-GROUP-BY-밑에-WHERE는-GROUP-BY전에-위에-필터링"><a href="#HAVING-GROUP-BY가-실행되고-난-결과에-조건을-추가-즉-GROUP-BY-밑에-WHERE는-GROUP-BY전에-위에-필터링" class="headerlink" title="HAVING : GROUP BY가 실행되고 난 결과에 조건을 추가, 즉 GROUP BY 밑에(WHERE는 GROUP BY전에(위에)필터링)"></a>HAVING : GROUP BY가 실행되고 난 결과에 조건을 추가, 즉 GROUP BY 밑에(WHERE는 GROUP BY전에(위에)필터링)</h2>]]></content:encoded>
      
      <comments>https://howardhowonyu.github.io/2020/02/12/TIL-Database-2020-02-12-mysql-md/#disqus_thread</comments>
    </item>
    
    <item>
      <title>mySQL 1</title>
      <link>https://howardhowonyu.github.io/2020/02/12/Database-2020-02-12-mySQL-md/</link>
      <guid>https://howardhowonyu.github.io/2020/02/12/Database-2020-02-12-mySQL-md/</guid>
      <pubDate>Wed, 12 Feb 2020 08:23:48 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;1-기본-명령&quot;&gt;&lt;a href=&quot;#1-기본-명령&quot; class=&quot;headerlink&quot; title=&quot;1. 기본 명령&quot;&gt;&lt;/a&gt;1. 기본 명령&lt;/h1&gt;&lt;h2 id=&quot;확인&quot;&gt;&lt;a href=&quot;#확인&quot; class=&quot;headerlink&quot; title=
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="1-기본-명령"><a href="#1-기본-명령" class="headerlink" title="1. 기본 명령"></a>1. 기본 명령</h1><h2 id="확인"><a href="#확인" class="headerlink" title="확인"></a>확인</h2><ul><li><code>SHOW DATABASE</code> : 현재 데이터 베이스 확인</li></ul><h2 id="생성"><a href="#생성" class="headerlink" title="생성"></a>생성</h2><ul><li><code>CREATE DATABASE</code></li><li><code>CREATE TABLE</code></li></ul><h2 id="데이터-베이스-선택-확인"><a href="#데이터-베이스-선택-확인" class="headerlink" title="데이터 베이스 선택 확인"></a>데이터 베이스 선택 확인</h2><ul><li><code>SELECT DATABASE()</code></li></ul><h1 id="2-테이블-생성"><a href="#2-테이블-생성" class="headerlink" title="2. 테이블 생성"></a>2. 테이블 생성</h1><ul><li>좌측이 컬럼의 이름, 우측이 컬럼에 들어갈 데이터 타입<blockquote><p>;(세미콜론) 단위로 끊어서 실행하니. 꼭 주의해서 붙여줄것!</p></blockquote></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> user1(</span><br><span class="line">    user_id <span class="built_in">INT</span>,</span><br><span class="line">    <span class="keyword">name</span> <span class="built_in">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">    email <span class="built_in">VARCHAR</span>(<span class="number">30</span>),</span><br><span class="line">    age <span class="built_in">INT</span>(<span class="number">3</span>),</span><br><span class="line">    rdate <span class="built_in">DATE</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><blockquote><p>데이터 타입에 추가로 조건을 줄수 있다.</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> user2(</span><br><span class="line">user_id <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT,</span><br><span class="line">  <span class="comment">-- PRIMARY KEY : unique + not null 조건을 가짐</span></span><br><span class="line">  <span class="comment">-- AUTO_INCREMENT : 1씩 증가한다</span></span><br><span class="line"><span class="keyword">name</span> <span class="built_in">VARCHAR</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">email <span class="built_in">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">UNIQUE</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 데이터가 없으면 '30 들어간다'</span></span><br><span class="line">age <span class="built_in">INT</span>(<span class="number">3</span>) <span class="keyword">DEFAULT</span> <span class="number">30</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 현재시간이 자동으로 들어가는 데이터 타입</span></span><br><span class="line">rdate <span class="built_in">TIMESTAMP</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h1 id="3-수정-Alter"><a href="#3-수정-Alter" class="headerlink" title="3. 수정 Alter"></a>3. 수정 Alter</h1><h4 id="데이터-베이스-수정"><a href="#데이터-베이스-수정" class="headerlink" title="데이터 베이스 수정"></a>데이터 베이스 수정</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> <span class="keyword">variables</span> <span class="keyword">like</span> <span class="string">"character_set_database"</span>;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> <span class="keyword">test</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> = utf8;</span><br></pre></td></tr></table></figure><h4 id="테이블-추가-수정-삭제"><a href="#테이블-추가-수정-삭제" class="headerlink" title="테이블 추가, 수정, 삭제"></a>테이블 추가, 수정, 삭제</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> user2 <span class="keyword">ADD</span> tmp <span class="built_in">TEXT</span>;</span><br><span class="line"><span class="comment">-- user2 테이블에 텍스트 타입을 가지고 있는 tmp라는 컬럼 추가</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> user2 <span class="keyword">MODIFY</span> <span class="keyword">COLUMN</span> tmp <span class="built_in">INT</span>(<span class="number">3</span>);</span><br><span class="line"><span class="comment">-- tmp컬럼을 인트타입으로 변경</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> user2 <span class="keyword">DROP</span> tmp;</span><br><span class="line"><span class="comment">-- tmp 컬럼을 삭제</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> user1 <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> = utf8;</span><br><span class="line"><span class="comment">-- user1테이블을 utf8로 변경</span></span><br></pre></td></tr></table></figure><h2 id="Drop"><a href="#Drop" class="headerlink" title="Drop"></a>Drop</h2><h4 id="데이터-베이스-삭제"><a href="#데이터-베이스-삭제" class="headerlink" title="데이터 베이스 삭제"></a>데이터 베이스 삭제</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> tmp;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">DATABASE</span> tmp;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">DATABASE</span> test3;</span><br></pre></td></tr></table></figure><h4 id="테이블-삭제"><a href="#테이블-삭제" class="headerlink" title="테이블 삭제"></a>테이블 삭제</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> user3;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DATABASE</span>();</span><br></pre></td></tr></table></figure><h2 id="Insert-데이터-추가"><a href="#Insert-데이터-추가" class="headerlink" title="Insert : 데이터 추가"></a>Insert : 데이터 추가</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> user1(user_id, <span class="keyword">name</span>, email, age, rdate)</span><br><span class="line"><span class="comment">-- user1 테이블에 각 컬럼에다</span></span><br><span class="line"><span class="keyword">VALUE</span>(<span class="number">2</span>,<span class="string">"howard2"</span>,<span class="string">'yoohowon@gmail.com'</span>,<span class="number">31</span>,<span class="keyword">now</span>()),</span><br><span class="line">(<span class="number">3</span>,<span class="string">"a"</span>,<span class="string">'owon@gmail.com'</span>,<span class="number">15</span>,<span class="keyword">now</span>()),</span><br><span class="line">(<span class="number">4</span>,<span class="string">"peter"</span>,<span class="string">'yoohowon@gmail.com'</span>,<span class="number">12</span>,<span class="keyword">now</span>()),</span><br><span class="line">(<span class="number">5</span>,<span class="string">"po"</span>,<span class="string">'yohowon@gmail.com'</span>,<span class="number">2</span>,<span class="keyword">now</span>()),</span><br><span class="line">(<span class="number">6</span>,<span class="string">"hord"</span>,<span class="string">'yoohowon@gmail.com'</span>,<span class="number">56</span>,<span class="keyword">now</span>());</span><br><span class="line"><span class="comment">-- 이런 값들을 준다, </span></span><br><span class="line"><span class="comment">-- rdate는 TIMESTAMP 타입, now()는 현재 시간을 입력</span></span><br></pre></td></tr></table></figure><h1 id="4-SELECT-데이터-조회"><a href="#4-SELECT-데이터-조회" class="headerlink" title="4. SELECT : 데이터 조회"></a>4. SELECT : 데이터 조회</h1><blockquote><p>컬럼명, 불러올때 as로 이름 지정 가능</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 컬럼이름, 불러올때 as로 이름 지정 가능</span></span><br><span class="line"><span class="keyword">SELECT</span> user_id <span class="keyword">as</span> <span class="string">"아이디"</span>, <span class="keyword">name</span> <span class="keyword">as</span> <span class="string">"이름"</span>, age <span class="keyword">as</span> <span class="string">"나이"</span></span><br><span class="line"><span class="comment">-- 테이블 이름</span></span><br><span class="line"><span class="keyword">FROM</span> user1;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 전체 선택</span></span><br><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> user1;</span><br></pre></td></tr></table></figure><h1 id="5-DISTINCT-중복제거"><a href="#5-DISTINCT-중복제거" class="headerlink" title="5. DISTINCT 중복제거"></a>5. DISTINCT 중복제거</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span>(<span class="keyword">name</span>)</span><br><span class="line"><span class="keyword">FROM</span> user1;</span><br></pre></td></tr></table></figure><h1 id="6-WHERE-조건검색"><a href="#6-WHERE-조건검색" class="headerlink" title="6. WHERE 조건검색"></a>6. WHERE 조건검색</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 30세 이상인 사용자를 검색해서 이름의 종류(UNIQUE 한) 개수를 출력</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(<span class="keyword">DISTINCT</span>(<span class="keyword">name</span>))</span><br><span class="line"><span class="keyword">FROM</span> user1</span><br><span class="line"><span class="keyword">WHERE</span> age &gt;= <span class="number">30</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> user1</span><br><span class="line"><span class="keyword">WHERE</span> age &gt;= <span class="number">20</span> <span class="keyword">AND</span> age &lt; <span class="number">40</span>;</span><br><span class="line"><span class="comment">-- AND 가능</span></span><br></pre></td></tr></table></figure><h2 id="범위데이터-가져오기-BETWEEN-A-AND-B"><a href="#범위데이터-가져오기-BETWEEN-A-AND-B" class="headerlink" title="범위데이터 가져오기 : BETWEEN A AND B"></a>범위데이터 가져오기 : BETWEEN A AND B</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> user1</span><br><span class="line"><span class="keyword">WHERE</span> age <span class="keyword">BETWEEN</span> <span class="number">20</span> <span class="keyword">AND</span> <span class="number">39</span>;</span><br></pre></td></tr></table></figure><h2 id="ORDER-BY-정렬"><a href="#ORDER-BY-정렬" class="headerlink" title="ORDER BY ,정렬"></a>ORDER BY ,정렬</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> user1</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="keyword">name</span>, age <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure><blockquote><p>내림차순, 오름차순 정렬</p><blockquote><p>ASC: asending<br>DESC : descending</p></blockquote></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 나이가 20세 에서 40세 사이에 있는 사용자를 이름 순으로 정렬하고, 중복데이터를 제거 해서 출력</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span>(<span class="keyword">name</span>)</span><br><span class="line"><span class="keyword">FROM</span> user1</span><br><span class="line"><span class="keyword">WHERE</span> age <span class="keyword">BETWEEN</span> <span class="number">20</span> <span class="keyword">AND</span> <span class="number">40</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="keyword">name</span> <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure><h2 id="concat"><a href="#concat" class="headerlink" title="concat"></a>concat</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">name</span>, age, <span class="keyword">concat</span>(<span class="keyword">name</span>,<span class="string">"("</span>,age,<span class="string">")"</span>) <span class="keyword">as</span> name_age</span><br><span class="line"><span class="keyword">FROM</span> user1;</span><br></pre></td></tr></table></figure><h2 id="like-where-절에서-특정-문자열이-들어간-데이터-조회"><a href="#like-where-절에서-특정-문자열이-들어간-데이터-조회" class="headerlink" title="like : where 절에서 특정 문자열이 들어간 데이터 조회"></a>like : where 절에서 특정 문자열이 들어간 데이터 조회</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * </span><br><span class="line"><span class="keyword">FROM</span> user1</span><br><span class="line"><span class="comment">-- %%앞 뒤에 어떤 문자나 숫자가 온다는 뜻</span></span><br><span class="line"><span class="keyword">WHERE</span> email <span class="keyword">like</span> <span class="string">"%@gmail.%"</span>;</span><br><span class="line"><span class="comment">-- WHERE email not like "%@gmail.%"</span></span><br><span class="line"><span class="comment">-- # 처음부터 시작</span></span><br><span class="line"><span class="comment">-- WHERE email like "p%"</span></span><br></pre></td></tr></table></figure><h2 id="in-여러-개의-조건을-조회할때-사용"><a href="#in-여러-개의-조건을-조회할때-사용" class="headerlink" title="in : 여러 개의 조건을 조회할때 사용"></a>in : 여러 개의 조건을 조회할때 사용</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> user1</span><br><span class="line"><span class="comment">-- WHERE name ="howard" or name="po" or name="hord" 보다 아래가 나음</span></span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">name</span> <span class="keyword">in</span> (<span class="string">'howard'</span>,<span class="string">'po'</span>,<span class="string">'hord'</span>);</span><br></pre></td></tr></table></figure><h2 id="in의-활용-서브-쿼리"><a href="#in의-활용-서브-쿼리" class="headerlink" title="in의 활용 : 서브 쿼리"></a>in의 활용 : 서브 쿼리</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> user1</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">name</span> <span class="keyword">in</span> (</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span>(<span class="keyword">name</span>)</span><br><span class="line"><span class="keyword">from</span> user1</span><br><span class="line"><span class="keyword">WHERE</span> age &gt; <span class="number">30</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h2 id="LIMIT-출력-갯수-제한"><a href="#LIMIT-출력-갯수-제한" class="headerlink" title="LIMIT : 출력 갯수 제한"></a>LIMIT : 출력 갯수 제한</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> user1</span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> user1</span><br><span class="line"><span class="comment">-- 3번째 부터 밑으로 5개 </span></span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">3</span>,<span class="number">5</span>;</span><br></pre></td></tr></table></figure><h1 id="6-UPDATE-데이터를-수정"><a href="#6-UPDATE-데이터를-수정" class="headerlink" title="6. UPDATE : 데이터를 수정"></a>6. UPDATE : 데이터를 수정</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> user1</span><br><span class="line"><span class="keyword">SET</span> age=<span class="number">30</span>, rdate=<span class="string">"2019-12-12"</span></span><br><span class="line"><span class="keyword">WHERE</span> age <span class="keyword">BETWEEN</span> <span class="number">30</span> <span class="keyword">AND</span> <span class="number">39</span>;</span><br><span class="line"><span class="comment">-- age 컬럼의 값이 30~39인 경우 age=30으로 하고, rdate="2019-12-12로 바꾼다</span></span><br></pre></td></tr></table></figure><h2 id="7-DELETE"><a href="#7-DELETE" class="headerlink" title="7. DELETE"></a>7. DELETE</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> user1</span><br><span class="line"><span class="keyword">WHERE</span> rdate &lt; <span class="string">"2020-02-12"</span>;</span><br><span class="line"><span class="comment">-- rdate가 "2020-02-12"보다 낮은경우 지워라</span></span><br><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> user1;</span><br></pre></td></tr></table></figure><h2 id="HAVING"><a href="#HAVING" class="headerlink" title="HAVING"></a>HAVING</h2><blockquote><p>GROUP BY가 실행되고 난 결과에 조건을 추가, 즉 GROUP BY 밑에(WHERE는 GROUP BY전에(위에)필터링)</p></blockquote>]]></content:encoded>
      
      <comments>https://howardhowonyu.github.io/2020/02/12/Database-2020-02-12-mySQL-md/#disqus_thread</comments>
    </item>
    
    <item>
      <title>정규분포에서 파생된 분포, 모수추정</title>
      <link>https://howardhowonyu.github.io/2020/02/11/TIL-mathematics-2020-02-11-math-md/</link>
      <guid>https://howardhowonyu.github.io/2020/02/11/TIL-mathematics-2020-02-11-math-md/</guid>
      <pubDate>Tue, 11 Feb 2020 12:57:58 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;정규-분포에서-파생된-분포&quot;&gt;&lt;a href=&quot;#정규-분포에서-파생된-분포&quot; class=&quot;headerlink&quot; title=&quot;정규 분포에서 파생된 분포&quot;&gt;&lt;/a&gt;정규 분포에서 파생된 분포&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;통계량 중요!!&lt;/li&gt;
&lt;/
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="정규-분포에서-파생된-분포"><a href="#정규-분포에서-파생된-분포" class="headerlink" title="정규 분포에서 파생된 분포"></a>정규 분포에서 파생된 분포</h1><ul><li>통계량 중요!!</li></ul><h2 id="스튜던트-t분포"><a href="#스튜던트-t분포" class="headerlink" title="스튜던트 t분포"></a>스튜던트 t분포</h2><ul><li>펫테일을 보이는 데이터모형에 적합</li><li>t(x;m(모수),lambda(표준편차),nu(자유도))</li><li>자유도가 1이면 코시분포, 코시분포의 양수인 부분을 하프코시분포</li></ul><h2 id="t-통계량"><a href="#t-통계량" class="headerlink" title="t 통계량"></a>t 통계량</h2><ul><li>정규분포에서 표본을 뽑아서 더한다음 표준편차로 나눈 것.</li></ul><h2 id="카이제곱분포"><a href="#카이제곱분포" class="headerlink" title="카이제곱분포"></a>카이제곱분포</h2><ul><li>정규분포에서 표본을 뽑아서 제곱해서 더한 것.</li><li>N이 커질수록(여러개를 더할수록, 중심극한정리에 의해) 정규분포 처럼 된다.</li></ul><h2 id="F분포"><a href="#F분포" class="headerlink" title="F분포"></a>F분포</h2><ul><li>카이제곱 분포를 따르는 독립적인 두 확률변수를 각각 N1,N2로 나눈뒤 비율을 구한 분포</li></ul><h2 id="5가지-통계량-공식"><a href="#5가지-통계량-공식" class="headerlink" title="5가지 통계량 공식"></a>5가지 통계량 공식</h2><h2 id="다변수-정규분포"><a href="#다변수-정규분포" class="headerlink" title="다변수 정규분포"></a>다변수 정규분포</h2><ul><li>고유값분해 : 다변수정규분포 함수의 정밀도행렬이 가지는 고유값: 타원의 폭, 고유벡터: 타원의 방향</li><li>고유값 분해해서 나온 공분산 행렬 sigma를 변환행렬로 생각하고, 새로운 기저벡터를 만든다. (회전하고 이동한다)</li><li>다변수 정규분포의 조건부 확률분포(자른다): 다변수 정규분포인 확률변수벡터 중 어떤 원소의 값이 주어지면 다른 확률변수의 조건부 확률 분포는 다변수 정규분포이다.</li><li>다변수 정규분포의 주변 확률분포(누른다): 다변수 정규분포의 주변확률분포는 다변수 정규분포이다.</li></ul><h2 id="베타분포"><a href="#베타분포" class="headerlink" title="베타분포"></a>베타분포</h2><ul><li>0~1까지 가질수 있는 베르누이 분포의 모수 mu의 값을 베이지안 추정한 결과로 표현한것.</li><li>Beta(x;a,b) : a,b가 커질수록 모수추정의 정확도가 높아짐(그래프가 더 뾰족)</li></ul><h2 id="감마분포"><a href="#감마분포" class="headerlink" title="감마분포"></a>감마분포</h2><ul><li>0부터 무한대의 값을 가지는 양수값을 추정하는데 사용</li></ul><h2 id="디리클레-분포"><a href="#디리클레-분포" class="headerlink" title="디리클레 분포"></a>디리클레 분포</h2><ul><li>베타분포의 확장판</li><li>다변수 확률변수의 베이지안 모형에 사용</li><li>베타분포는 k=2인 디리클레 분포</li></ul><h2 id="하이퍼모수"><a href="#하이퍼모수" class="headerlink" title="하이퍼모수"></a>하이퍼모수</h2><ul><li>베타분포, 디리클레분포의 모수 (베르누이분포, 카테고리분포의 모수의 모수)</li></ul><h1 id="확률분포의-추정"><a href="#확률분포의-추정" class="headerlink" title="확률분포의 추정"></a>확률분포의 추정</h1><ul><li>데이터로 부터 확률변수의 분포를 알아내는 과정</li><li>step1 : 확률변수가 어떤 확률분포를 따르는지 확인</li><li>step2 : 모수추정</li></ul><h2 id="모수추정"><a href="#모수추정" class="headerlink" title="모수추정"></a>모수추정</h2><ul><li>모수의 값으로 가장 가능성이 높은 하나의 숫자를 찾아내는 작업</li><li>모멘트 방법: 표본자료의 “표본 모멘트”와 확률분포의 “이론적 모멘트”가 같다고 가정<ul><li>베르누의 분포의 모수추정</li><li>정규분포의 모수추정</li><li>베타분포의 모수추정</li></ul></li></ul><h1 id="최대-가능도-추정법"><a href="#최대-가능도-추정법" class="headerlink" title="최대 가능도 추정법"></a>최대 가능도 추정법</h1><ul><li>가능도 함수를 사용</li></ul><h2 id="가능도-함수"><a href="#가능도-함수" class="headerlink" title="가능도 함수"></a>가능도 함수</h2><ul><li>확률 밀도 함수는 일반적으로 모수를 알고 표본값을 찾아내지만</li><li>가능도 함수는 표본값을 가지고 있고 이를 뽑아내는 모수를 찾아내는 함수</li></ul><h2 id="최대가능도-추정법"><a href="#최대가능도-추정법" class="headerlink" title="최대가능도 추정법"></a>최대가능도 추정법</h2><ul><li>주어진 표본에 대해 가능도를 가장 크게 하는 모수를 찾는 방법</li></ul><h2 id="로그-가능도-함수"><a href="#로그-가능도-함수" class="headerlink" title="로그 가능도 함수"></a>로그 가능도 함수</h2><ul><li>반복시행으로 인한 복수데이터는 pdf들의 곱으로 나타내야 하는데, 로그를 취하면 더하기로 표현 가능</li></ul><h2 id="각-분포별-최대가능도-모수추정"><a href="#각-분포별-최대가능도-모수추정" class="headerlink" title="각 분포별 최대가능도 모수추정"></a>각 분포별 최대가능도 모수추정</h2><ul><li>베르누이 분포 : 모수는 1이 나온 횟수와 전체 시행횟수의 비율</li><li>카테고리 분포 : 모수는 각 범주값이 나온 횟수와 전체 시행횟수의 비율</li><li>정규분포 : 기대값은 표본평균, 분산은 (편향)표본평균</li><li>다변수 정규분포 : 기대값은 표본평균벡터, 분산은 표본공분산 행렬</li></ul><h1 id="베이즈-추정법"><a href="#베이즈-추정법" class="headerlink" title="베이즈 추정법"></a>베이즈 추정법</h1><ul><li>모수를 숫자 하나로 얘기하지 않고, 모수값을 가질수 있는 모든 가능성의 분포를 계산</li></ul><h2 id="베이즈-추정법의-기본-원리"><a href="#베이즈-추정법의-기본-원리" class="headerlink" title="베이즈 추정법의 기본 원리"></a>베이즈 추정법의 기본 원리</h2><ul><li>사전분포, 사후분포, 가능도 분포로 구성</li><li>모수적 방법, 비모수적 방법(MCMC - 몬테 카를로 방법)</li></ul><h2 id="베이즈-추정법의-모수적-방법"><a href="#베이즈-추정법의-모수적-방법" class="headerlink" title="베이즈 추정법의 모수적 방법"></a>베이즈 추정법의 모수적 방법</h2><ul><li>켤레 사전확률 분포 : 사전분포와 사후분포가 형태는 같고, 모수값만 다른 경우</li><li>베르누이 분포의 모수 추정<ul><li>베타분포라고 가정</li></ul></li><li>카테고리 분포의 모수추정<ul><li>디리클레 분포라고 가정</li></ul></li><li>정규분포의 기대값, 모수추정</li></ul>]]></content:encoded>
      
      <comments>https://howardhowonyu.github.io/2020/02/11/TIL-mathematics-2020-02-11-math-md/#disqus_thread</comments>
    </item>
    
    <item>
      <title>확률분포</title>
      <link>https://howardhowonyu.github.io/2020/02/10/TIL-mathematics-2020-02-10-bernoilli-md/</link>
      <guid>https://howardhowonyu.github.io/2020/02/10/TIL-mathematics-2020-02-10-bernoilli-md/</guid>
      <pubDate>Mon, 10 Feb 2020 13:05:44 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;베르누이-시행-Bernoulli-trial&quot;&gt;&lt;a href=&quot;#베르누이-시행-Bernoulli-trial&quot; class=&quot;headerlink&quot; title=&quot;베르누이 시행(Bernoulli trial)&quot;&gt;&lt;/a&gt;베르누이 시행(Bernoull
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="베르누이-시행-Bernoulli-trial"><a href="#베르누이-시행-Bernoulli-trial" class="headerlink" title="베르누이 시행(Bernoulli trial)"></a>베르누이 시행(Bernoulli trial)</h2><ul><li>결과가 두가지 중 하나로만 나오는 실험이나 시행</li><li>0,1로 제일 많이 표현</li></ul><h2 id="베르누이-확률분포"><a href="#베르누이-확률분포" class="headerlink" title="베르누이 확률분포"></a>베르누이 확률분포</h2><ul><li>X ~ Bern(x;m)</li><li>모수는 m와 1-m</li></ul><h2 id="베르누이-분포의-모멘트"><a href="#베르누이-분포의-모멘트" class="headerlink" title="베르누이 분포의 모멘트"></a>베르누이 분포의 모멘트</h2><ul><li>E[X] = m</li><li>Var[X] = m(1-m)</li></ul><h2 id="이항분포"><a href="#이항분포" class="headerlink" title="이항분포"></a>이항분포</h2><ul><li>베르누이 시행을 N번 반복하는 경우, N번 시도했을때 성공한 횟수를 확률변수라 하면, X값은 0~N까지의 정수중 하나.</li><li>X ~ Bin(x;N,m) = 펙토리얼</li></ul><h2 id="이항분포의-모멘트"><a href="#이항분포의-모멘트" class="headerlink" title="이항분포의 모멘트"></a>이항분포의 모멘트</h2><ul><li>E[X] = Nm</li><li>Var[X] = Nm(1-m)</li></ul><h2 id="베르누이분포와-이항분포의-모수추정"><a href="#베르누이분포와-이항분포의-모수추정" class="headerlink" title="베르누이분포와 이항분포의 모수추정"></a>베르누이분포와 이항분포의 모수추정</h2><ul><li>N1 / N</li></ul><h4 id="베르누이-분포를-활용한-스팸메일-예제"><a href="#베르누이-분포를-활용한-스팸메일-예제" class="headerlink" title="베르누이 분포를 활용한 스팸메일 예제"></a>베르누이 분포를 활용한 스팸메일 예제</h4><h2 id="카테고리-확률변수"><a href="#카테고리-확률변수" class="headerlink" title="카테고리 확률변수"></a>카테고리 확률변수</h2><ul><li>1부터 k까지 k개 정수값 중 하나가 나온다.(k= 카테고리, 범주값, 클래스)</li><li>원핫인코딩</li></ul><h2 id="카테고리-확률분포"><a href="#카테고리-확률분포" class="headerlink" title="카테고리 확률분포"></a>카테고리 확률분포</h2><ul><li>Cat(x;m)</li></ul><h2 id="카테고리-분포의-모멘트"><a href="#카테고리-분포의-모멘트" class="headerlink" title="카테고리 분포의 모멘트"></a>카테고리 분포의 모멘트</h2><ul><li>E[xk] = mk</li><li>Var[xk] = mk(1-mk)</li></ul><table><thead><tr><th>베르누이 확률변수</th><th>카테고리 확률변수</th></tr></thead><tbody><tr><td>이항분포</td><td>다항분포</td></tr></tbody></table><h2 id="다항분포"><a href="#다항분포" class="headerlink" title="다항분포"></a>다항분포</h2><ul><li>주사위를 10번 던져서 1이 몇번, 2가 몇번… 등</li></ul><h2 id="다항분포의-모멘트"><a href="#다항분포의-모멘트" class="headerlink" title="다항분포의 모멘트"></a>다항분포의 모멘트</h2><ul><li>E[xk] = Nmk</li><li>Var[xk] = Nmk(1-mk)</li></ul><h2 id="정규분포와-중심극한정리"><a href="#정규분포와-중심극한정리" class="headerlink" title="정규분포와 중심극한정리"></a>정규분포와 중심극한정리</h2><ul><li>여러 확률변수를 더하면 정규분포와 비슷해 진다.</li></ul><h2 id="정규분포의-통계량-분포"><a href="#정규분포의-통계량-분포" class="headerlink" title="정규분포의 통계량 분포"></a>정규분포의 통계량 분포</h2><ul><li>N개의 정규분포로 부터 얻은 표본의 합은 N과 상관없이 정규분포다</li></ul><h2 id="선형회기모형과-정규분포"><a href="#선형회기모형과-정규분포" class="headerlink" title="선형회기모형과 정규분포"></a>선형회기모형과 정규분포</h2><ul><li>선형회기모형에서 잡음 e를 모형화 하는데 정규분포를 사용한다</li><li>e를 기대값이 0인 정규분포라고 가정한다.</li></ul>]]></content:encoded>
      
      <comments>https://howardhowonyu.github.io/2020/02/10/TIL-mathematics-2020-02-10-bernoilli-md/#disqus_thread</comments>
    </item>
    
    <item>
      <title>pandas 데이터 전처리 연습</title>
      <link>https://howardhowonyu.github.io/2020/02/08/TIL-python-2020-02-08-pandas-md/</link>
      <guid>https://howardhowonyu.github.io/2020/02/08/TIL-python-2020-02-08-pandas-md/</guid>
      <pubDate>Sat, 08 Feb 2020 11:48:36 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;인덱스를-다른-컬럼의-값으로-채워줌&quot;&gt;&lt;a href=&quot;#인덱스를-다른-컬럼의-값으로-채워줌&quot; class=&quot;headerlink&quot; title=&quot;인덱스를 다른 컬럼의 값으로 채워줌&quot;&gt;&lt;/a&gt;인덱스를 다른 컬럼의 값으로 채워줌&lt;/h2&gt;&lt;ul&gt;

        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="인덱스를-다른-컬럼의-값으로-채워줌"><a href="#인덱스를-다른-컬럼의-값으로-채워줌" class="headerlink" title="인덱스를 다른 컬럼의 값으로 채워줌"></a>인덱스를 다른 컬럼의 값으로 채워줌</h2><ul><li><code>df = df.set_index(&#39;컬럼 이름&#39;)</code></li></ul><h2 id="새로운-컬럼만들고-소문자로-바꿔줌"><a href="#새로운-컬럼만들고-소문자로-바꿔줌" class="headerlink" title="새로운 컬럼만들고 소문자로 바꿔줌"></a>새로운 컬럼만들고 소문자로 바꿔줌</h2><p><code>df[&#39;컬럼 이름&#39;] = df[&#39;Gender&#39;].str.lower()</code></p><h1 id="값을-세줌"><a href="#값을-세줌" class="headerlink" title="값을 세줌"></a>값을 세줌</h1><p><code>df[&#39;컬럼 이름&#39;].value_counts()</code></p><h1 id="특정-컬럼의-값들을-기준으로-내가-원하는-컬럼의-값의-평균"><a href="#특정-컬럼의-값들을-기준으로-내가-원하는-컬럼의-값의-평균" class="headerlink" title="특정 컬럼의 값들을 기준으로 내가 원하는 컬럼의 값의 평균"></a>특정 컬럼의 값들을 기준으로 내가 원하는 컬럼의 값의 평균</h1><p><code>height_mean_by_gender = df.groupby([&#39;값이 기준이 되는 컬럼&#39;])[&#39;내가 평균을 구하고자 하는 컬럼&#39;].mean()height_mean_by_gender</code></p>]]></content:encoded>
      
      <comments>https://howardhowonyu.github.io/2020/02/08/TIL-python-2020-02-08-pandas-md/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
